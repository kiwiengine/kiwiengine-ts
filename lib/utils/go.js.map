{"version":3,"file":"go.js","sourceRoot":"","sources":["../../src/utils/go.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,oBAAoB,EAAE,MAAM,oCAAoC,CAAC;AAC1E,OAAO,EAAE,kBAAkB,EAAE,MAAM,kCAAkC,CAAC;AACtE,OAAO,EAAE,eAAe,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,YAAY,EAAE,MAAM,2BAA2B,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,yBAAyB,CAAC;AACrD,OAAO,EAAE,kBAAkB,EAAE,MAAM,kCAAkC,CAAC;AACtE,OAAO,EAAE,UAAU,EAAE,MAAM,4BAA4B,CAAC;AAExD,MAAM,kBAAkB,GAAG;IACzB,IAAI,EAAE,UAAU;IAChB,QAAQ,EAAE,YAAY;IACtB,iBAAiB,EAAE,oBAAoB;IACvC,eAAe,EAAE,kBAAkB;IACnC,OAAO,EAAE,WAAW;IACpB,KAAK,EAAE,kBAAkB;IACzB,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,eAAe;CACf,CAAC;AAgBX,SAAS,EAAE,CACT,OAAU,EAAO,EACjB,GAAG,IAA4D;IAE/D,MAAM,EAAE,GAAG,IAAI,kBAAkB,CAAC,CAAC,IAAI,IAAI,IAAI,CAA4B,CAAC,EAAE,CAAC;IAE/E,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,IAAI,GAAG,YAAY,UAAU;YAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACtC,IAAI,GAAG,EAAE,CAAC;YACb,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;gBACrB,EAAU,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAC9B,CAAC;QACH,CAAC;IACH,CAAC;IAED,OAAO,EAAyB,CAAC;AACnC,CAAC;AAED,OAAO,EAAE,EAAE,EAAE,CAAC","sourcesContent":["import { AnimatedSpriteObject } from '../game-object-ext/animated-sprite';\nimport { DomContainerObject } from '../game-object-ext/dom-container';\nimport { RectangleObject } from '../game-object-ext/rect';\nimport { SpineObject } from '../game-object-ext/spine';\nimport { SpriteObject } from '../game-object-ext/sprite';\nimport { TextObject } from '../game-object-ext/text';\nimport { TilingSpriteObject } from '../game-object-ext/tiling-sprite';\nimport { GameObject } from '../game-object/game-object';\n\nconst GameObjectClassMap = {\n  'go': GameObject,\n  'sprite': SpriteObject,\n  'animated-sprite': AnimatedSpriteObject,\n  'tiling-sprite': TilingSpriteObject,\n  'spine': SpineObject,\n  'dom': DomContainerObject,\n  'text': TextObject,\n  'rect': RectangleObject,\n} as const;\n\ntype GameObjectNameMap = {\n  [K in keyof typeof GameObjectClassMap]: InstanceType<(typeof GameObjectClassMap)[K]>;\n};\n\ntype Name = '' | keyof GameObjectNameMap;\n\ntype GameObjectByName<T extends Name> = (\n  T extends '' ? GameObject\n  : (\n    T extends keyof GameObjectNameMap ? GameObjectNameMap[T]\n    : GameObject\n  )\n);\n\nfunction go<T extends Name>(\n  name: T = '' as T,\n  ...args: (GameObjectByName<T> | Partial<GameObjectByName<T>>)[]\n): GameObjectByName<T> {\n  const go = new GameObjectClassMap[(name || 'go') as keyof GameObjectNameMap]();\n\n  for (const arg of args) {\n    if (arg instanceof GameObject) go.add(arg);\n    else if (arg) {\n      for (const key in arg) {\n        (go as any)[key] = arg[key];\n      }\n    }\n  }\n\n  return go as GameObjectByName<T>;\n}\n\nexport { go };\n"]}