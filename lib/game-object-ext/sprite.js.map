{"version":3,"file":"sprite.js","sourceRoot":"","sources":["../../src/game-object-ext/sprite.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AACjC,OAAO,EAAE,aAAa,EAAE,MAAM,0BAA0B,CAAC;AACzD,OAAO,EAAE,UAAU,EAAqB,MAAM,4BAA4B,CAAC;AAM3E,MAAM,YAA4C,SAAQ,UAAa;IACrE,OAAO,CAAU;IACjB,IAAI,CAAU;IAEd,YAAY,IAAoB;QAC9B,KAAK,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,IAAI,EAAE,CAAC;YACT,IAAI,IAAI,CAAC,GAAG;gBAAE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpC,CAAC;IACH,CAAC;IAED,KAAK,CAAC,KAAK;QACT,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QAEzB,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;YACd,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;gBAC1C,OAAO,CAAC,IAAI,CAAC,uCAAuC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YACnE,CAAC;YACD,MAAM,OAAO,GAAG,MAAM,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpD,IAAI,OAAO,EAAE,CAAC;gBACZ,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC;gBACrE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACnC,CAAC;QACH,CAAC;IACH,CAAC;IAED,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,IAAI,GAAG,CAAC,GAAuB;QAC7B,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,EAAE,CAAC;YACtB,IAAI,IAAI,CAAC,IAAI;gBAAE,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChD,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAChB,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC;IACH,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,IAAI;YAAE,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChD,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;CACF;AAED,OAAO,EAAE,YAAY,EAAE,CAAC","sourcesContent":["import { EventMap } from '@webtaku/event-emitter';\nimport { Sprite } from 'pixi.js';\nimport { textureLoader } from '../asset/loaders/texture';\nimport { GameObject, GameObjectOptions } from '../game-object/game-object';\n\ntype SpriteOptions = {\n  src?: string;\n} & GameObjectOptions;\n\nclass SpriteObject<E extends EventMap = EventMap> extends GameObject<E> {\n  #sprite?: Sprite;\n  #src?: string;\n\n  constructor(opts?: SpriteOptions) {\n    super(opts);\n    if (opts) {\n      if (opts.src) this.src = opts.src;\n    }\n  }\n\n  async #load() {\n    this.#sprite?.destroy({ children: true });\n    this.#sprite = undefined;\n\n    if (this.#src) {\n      if (!textureLoader.checkLoaded(this.#src)) {\n        console.info(`Texture not preloaded. Loading now: ${this.#src}`);\n      }\n      const texture = await textureLoader.load(this.#src);\n      if (texture) {\n        this.#sprite = new Sprite({ texture, anchor: 0.5, zIndex: -999999 });\n        this._addPixiChild(this.#sprite);\n      }\n    }\n  }\n\n  get src() {\n    return this.#src;\n  }\n\n  set src(src: string | undefined) {\n    if (this.#src !== src) {\n      if (this.#src) textureLoader.release(this.#src);\n      this.#src = src;\n      this.#load();\n    }\n  }\n\n  remove() {\n    if (this.#src) textureLoader.release(this.#src);\n    super.remove();\n  }\n}\n\nexport { SpriteObject };\n"]}