{"version":3,"file":"rect.js","sourceRoot":"","sources":["../../src/game-object-ext/rect.ts"],"names":[],"mappings":"AACA,OAAO,EAAa,QAAQ,EAAe,MAAM,SAAS,CAAC;AAC3D,OAAO,EAAE,UAAU,EAAE,MAAM,4BAA4B,CAAC;AAExD,MAAM,eAA+C,SAAQ,UAAa;IACxE,SAAS,GAAG,IAAI,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC;IAC9C,MAAM,GAAW,CAAC,CAAC;IACnB,OAAO,GAAW,CAAC,CAAC;IACpB,KAAK,CAAa;IAClB,OAAO,CAAe;IAEtB;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACrC,CAAC;IAED,KAAK;QACH,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,IAAI,CACzB,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAChB,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,EACjB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,OAAO,CACb,CAAC;QACF,IAAI,IAAI,CAAC,KAAK;YAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChD,IAAI,IAAI,CAAC,OAAO;YAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACxD,CAAC;IAED,IAAI,KAAK,KAAa,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3C,IAAI,KAAK,CAAC,KAAa,IAAI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC/D,IAAI,MAAM,KAAa,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7C,IAAI,MAAM,CAAC,KAAa,IAAI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAEjE,IAAI,IAAI,KAA4B,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACxD,IAAI,IAAI,CAAC,KAA4B,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAE5E,IAAI,MAAM,KAA8B,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC9D,IAAI,MAAM,CAAC,KAA8B,IAAI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;CACnF;AAED,OAAO,EAAE,eAAe,EAAE,CAAC","sourcesContent":["import { EventMap } from '@webtaku/event-emitter';\nimport { FillInput, Graphics, StrokeInput } from 'pixi.js';\nimport { GameObject } from '../game-object/game-object';\n\nclass RectangleObject<E extends EventMap = EventMap> extends GameObject<E> {\n  #graphics = new Graphics({ zIndex: -999999 });\n  #width: number = 0;\n  #height: number = 0;\n  #fill?: FillInput;\n  #stroke?: StrokeInput;\n\n  constructor() {\n    super();\n    this._addPixiChild(this.#graphics);\n  }\n\n  #draw() {\n    this.#graphics.clear().rect(\n      -this.#width / 2,\n      -this.#height / 2,\n      this.#width,\n      this.#height,\n    );\n    if (this.#fill) this.#graphics.fill(this.#fill);\n    if (this.#stroke) this.#graphics.stroke(this.#stroke);\n  }\n\n  get width(): number { return this.#width; }\n  set width(value: number) { this.#width = value; this.#draw(); }\n  get height(): number { return this.#height; }\n  set height(value: number) { this.#height = value; this.#draw(); }\n\n  get fill(): FillInput | undefined { return this.#fill; }\n  set fill(value: FillInput | undefined) { this.#fill = value; this.#draw(); }\n\n  get stroke(): StrokeInput | undefined { return this.#stroke; }\n  set stroke(value: StrokeInput | undefined) { this.#stroke = value; this.#draw(); }\n}\n\nexport { RectangleObject };\n"]}