{"version":3,"file":"transform.js","sourceRoot":"","sources":["../../src/game-object/transform.ts"],"names":[],"mappings":"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","sourcesContent":["class DirtyNumber {\n  #v: number;\n  #dirty: boolean;\n\n  constructor(v: number) {\n    this.#v = v;\n    this.#dirty = false;\n  }\n\n  get dirty(): boolean {\n    return this.#dirty;\n  }\n\n  get v(): number {\n    return this.#v;\n  }\n\n  set v(v: number) {\n    if (this.#v !== v) this.#dirty = true;\n    this.#v = v;\n  }\n\n  markClean() {\n    this.#dirty = false;\n  }\n}\n\nexport class LocalTransform {\n  x = new DirtyNumber(0);\n  y = new DirtyNumber(0);\n  pivotX = new DirtyNumber(0);\n  pivotY = new DirtyNumber(0);\n  scaleX = new DirtyNumber(1);\n  scaleY = new DirtyNumber(1);\n  rotation = new DirtyNumber(0);\n  alpha = new DirtyNumber(1);\n\n  markClean() {\n    this.x.markClean();\n    this.y.markClean();\n    this.pivotX.markClean();\n    this.pivotY.markClean();\n    this.scaleX.markClean();\n    this.scaleY.markClean();\n    this.rotation.markClean();\n    this.alpha.markClean();\n  }\n}\n\nexport class WorldTransform {\n  x = new DirtyNumber(0);\n  y = new DirtyNumber(0);\n  scaleX = new DirtyNumber(1);\n  scaleY = new DirtyNumber(1);\n  rotation = new DirtyNumber(0);\n  alpha = new DirtyNumber(1);\n\n  update(parent: WorldTransform, local: LocalTransform) {\n    const rx = local.x.v * parent.scaleX.v;\n    const ry = local.y.v * parent.scaleY.v;\n    const pCos = Math.cos(parent.rotation.v);\n    const pSin = Math.sin(parent.rotation.v);\n\n    this.scaleX.v = parent.scaleX.v * local.scaleX.v;\n    this.scaleY.v = parent.scaleY.v * local.scaleY.v;\n\n    const pivotX = local.pivotX.v * this.scaleX.v;\n    const pivotY = local.pivotY.v * this.scaleY.v;\n    const cos = Math.cos(local.rotation.v);\n    const sin = Math.sin(local.rotation.v);\n\n    this.x.v = parent.x.v + (rx * pCos - ry * pSin) - (pivotX * cos - pivotY * sin);\n    this.y.v = parent.y.v + (rx * pSin + ry * pCos) - (pivotX * sin + pivotY * cos);\n\n    this.rotation.v = parent.rotation.v + local.rotation.v;\n    this.alpha.v = parent.alpha.v * local.alpha.v;\n  }\n\n  markClean() {\n    this.x.markClean();\n    this.y.markClean();\n    this.scaleX.markClean();\n    this.scaleY.markClean();\n    this.rotation.markClean();\n    this.alpha.markClean();\n  }\n}\n\nexport function localOffsetToWorld(\n  world: WorldTransform,\n  ox: number,\n  oy: number\n): { x: number; y: number } {\n  const cos = Math.cos(world.rotation.v);\n  const sin = Math.sin(world.rotation.v);\n  const sx = ox * world.scaleX.v;\n  const sy = oy * world.scaleY.v;\n\n  const x = sx * cos - sy * sin;\n  const y = sx * sin + sy * cos;\n  return { x, y };\n}\n\nexport function worldToLocalWithNewWorld(\n  world: WorldTransform,\n  local: LocalTransform,\n  targetWorldX: number,\n  targetWorldY: number,\n  targetWorldRotation: number\n): {\n  x: number;\n  y: number;\n  rotation: number;\n  newWorldX: number;\n  newWorldY: number;\n  newWorldRotation: number;\n} {\n  const invLocalScaleX = local.scaleX.v !== 0 ? 1 / local.scaleX.v : 0;\n  const invLocalScaleY = local.scaleY.v !== 0 ? 1 / local.scaleY.v : 0;\n\n  const parentScaleX = world.scaleX.v * invLocalScaleX;\n  const parentScaleY = world.scaleY.v * invLocalScaleY;\n  const parentRot = world.rotation.v - local.rotation.v;\n\n  const pCos = Math.cos(parentRot);\n  const pSin = Math.sin(parentRot);\n\n  const cosOld = Math.cos(local.rotation.v);\n  const sinOld = Math.sin(local.rotation.v);\n\n  const pivotX = local.pivotX.v * world.scaleX.v;\n  const pivotY = local.pivotY.v * world.scaleY.v;\n\n  const rx0 = local.x.v * parentScaleX;\n  const ry0 = local.y.v * parentScaleY;\n\n  const parentX = world.x.v - (rx0 * pCos - ry0 * pSin) + (pivotX * cosOld - pivotY * sinOld);\n  const parentY = world.y.v - (rx0 * pSin + ry0 * pCos) + (pivotX * sinOld + pivotY * cosOld);\n\n  const rotation = targetWorldRotation - parentRot;\n\n  const cosNew = Math.cos(rotation);\n  const sinNew = Math.sin(rotation);\n\n  const tx = (targetWorldX - parentX) + (pivotX * cosNew - pivotY * sinNew);\n  const ty = (targetWorldY - parentY) + (pivotX * sinNew + pivotY * cosNew);\n\n  const rx = tx * pCos + ty * pSin;\n  const ry = -tx * pSin + ty * pCos;\n\n  const invParentScaleX = parentScaleX !== 0 ? 1 / parentScaleX : 0;\n  const invParentScaleY = parentScaleY !== 0 ? 1 / parentScaleY : 0;\n\n  const x = rx * invParentScaleX;\n  const y = ry * invParentScaleY;\n\n  const newRx = x * parentScaleX;\n  const newRy = y * parentScaleY;\n  const newWorldX = parentX + (newRx * pCos - newRy * pSin) - (pivotX * cosNew - pivotY * sinNew);\n  const newWorldY = parentY + (newRx * pSin + newRy * pCos) - (pivotX * sinNew + pivotY * cosNew);\n  const newWorldRotation = parentRot + rotation;\n\n  return { x, y, rotation, newWorldX, newWorldY, newWorldRotation };\n}\n"]}