{"version":3,"file":"animated-sprite.js","sourceRoot":"","sources":["../../../src/node/ext/animated-sprite.ts"],"names":[],"mappings":"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","sourcesContent":["import { AnimatedSprite as PixiAnimatedSprite, Spritesheet, SpritesheetData } from 'pixi.js'\nimport { getCachedAtlasId, spritesheetLoader } from '../../asset/loaders/spritesheet'\nimport { GameObject, GameObjectOptions } from '../core/game-object'\n\nexport type AnimatedSpriteNodeOptions = {\n  src: string\n  atlas: SpritesheetData\n  animation: string\n  fps: number\n  loop?: boolean\n} & GameObjectOptions\n\nexport class AnimatedSpriteNode extends GameObject {\n  #src: string\n  #atlas: SpritesheetData\n  #animation: string\n  #fps: number\n  #loop: boolean\n\n  #atlasId!: string\n  #sheet?: Spritesheet\n  #sprite?: PixiAnimatedSprite\n\n  constructor(options: AnimatedSpriteNodeOptions) {\n    super(options)\n    this.#src = options.src\n    this.#atlas = options.atlas\n    this.#animation = options.animation\n    this.#fps = options.fps\n    this.#loop = options.loop ?? true\n    this.#load()\n  }\n\n  async #load() {\n    this.#atlasId = getCachedAtlasId(this.#src, this.#atlas)\n\n    if (spritesheetLoader.checkLoaded(this.#atlasId)) {\n      this.#sheet = spritesheetLoader.get(this.#atlasId)\n    } else {\n      console.info(`Spritesheet not preloaded. Loading now: ${this.#atlasId}`)\n      this.#sheet = await spritesheetLoader.load(this.#atlasId, this.#src, this.#atlas)\n    }\n\n    this.#updateAnimation()\n  }\n\n  #updateAnimation() {\n    this.#sprite?.destroy()\n    this.#sprite = undefined\n\n    if (this.#sheet) {\n      if (!this.#sheet.animations[this.#animation]) {\n        console.error(`Animation not found: ${this.#animation}`)\n        return\n      }\n\n      const sprite = new PixiAnimatedSprite(this.#sheet.animations[this.#animation])\n      sprite.anchor.set(0.5, 0.5)\n      sprite.loop = this.#loop\n      sprite.animationSpeed = (this.#fps ?? 0) / 60\n      sprite.play()\n      this._pixiContainer.addChild(sprite)\n      this.#sprite = sprite\n    }\n  }\n\n  set src(src) {\n    if (this.#src !== src) {\n      spritesheetLoader.release(this.#atlasId)\n      this.#src = src\n      this.#load()\n    }\n  }\n\n  get src() { return this.#src }\n\n  set atlas(atlas) {\n    if (this.#atlas !== atlas) {\n      spritesheetLoader.release(this.#atlasId)\n      this.#atlas = atlas\n      this.#load()\n    }\n  }\n\n  get atlas() { return this.#atlas }\n\n  set animation(animation) {\n    if (this.#animation !== animation) {\n      this.#animation = animation\n      this.#updateAnimation()\n    }\n  }\n\n  get animation() { return this.#animation }\n\n  set fps(fps) {\n    if (this.#fps !== fps) {\n      this.#fps = fps\n      if (this.#sprite) this.#sprite.animationSpeed = (fps ?? 0) / 60\n    }\n  }\n\n  get fps() { return this.#fps }\n\n  set loop(loop) {\n    if (this.#loop !== loop) {\n      this.#loop = loop\n      if (this.#sprite) this.#sprite.loop = loop\n    }\n  }\n\n  get loop() { return this.#loop }\n\n  remove() {\n    spritesheetLoader.release(this.#atlasId)\n    super.remove()\n  }\n}\n"]}