{"version":3,"file":"sprite.js","sourceRoot":"","sources":["../../../src/node/ext/sprite.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,IAAI,UAAU,EAAE,MAAM,SAAS,CAAA;AAC9C,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAA;AAC3D,OAAO,EAAE,UAAU,EAAqB,MAAM,qBAAqB,CAAA;AAMnE,MAAM,OAAO,UAA0C,SAAQ,UAAa;IAC1E,IAAI,CAAQ;IACZ,OAAO,CAAa;IAEpB,YAAY,OAA0B;QACpC,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,CAAA;QACvB,IAAI,CAAC,KAAK,EAAE,CAAA;IACd,CAAC;IAED,KAAK,CAAC,KAAK;QACT,IAAI,OAAO,CAAA;QACX,IAAI,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACzC,OAAO,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACxC,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,IAAI,CAAC,uCAAuC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAA;YAChE,OAAO,GAAG,MAAM,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC/C,CAAC;QAED,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAA;QACzC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAA;QAExB,IAAI,OAAO,EAAE,CAAC;YACZ,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,CAAA;YACxE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;YACpC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAA;QACvB,CAAC;IACH,CAAC;IAED,IAAI,GAAG,CAAC,GAAG;QACT,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,EAAE,CAAC;YACtB,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YAChC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAA;YACf,IAAI,CAAC,KAAK,EAAE,CAAA;QACd,CAAC;IACH,CAAC;IAED,IAAI,GAAG,KAAK,OAAO,IAAI,CAAC,IAAI,CAAA,CAAC,CAAC;IAErB,MAAM;QACb,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAChC,KAAK,CAAC,MAAM,EAAE,CAAA;IAChB,CAAC;CACF","sourcesContent":["import { EventMap } from '@webtaku/event-emitter'\nimport { Sprite as PixiSprite } from 'pixi.js'\nimport { textureLoader } from '../../asset/loaders/texture'\nimport { GameObject, GameObjectOptions } from '../core/game-object'\n\nexport type SpriteNodeOptions = {\n  src: string\n} & GameObjectOptions\n\nexport class SpriteNode<E extends EventMap = EventMap> extends GameObject<E> {\n  #src: string\n  #sprite?: PixiSprite\n\n  constructor(options: SpriteNodeOptions) {\n    super(options)\n    this.#src = options.src\n    this.#load()\n  }\n\n  async #load() {\n    let texture\n    if (textureLoader.checkLoaded(this.#src)) {\n      texture = textureLoader.get(this.#src)\n    } else {\n      console.info(`Texture not preloaded. Loading now: ${this.#src}`)\n      texture = await textureLoader.load(this.#src)\n    }\n\n    this.#sprite?.destroy({ children: true })\n    this.#sprite = undefined\n\n    if (texture) {\n      const sprite = new PixiSprite({ texture, anchor: 0.5, zIndex: -999999 })\n      this._pixiContainer.addChild(sprite)\n      this.#sprite = sprite\n    }\n  }\n\n  set src(src) {\n    if (this.#src !== src) {\n      textureLoader.release(this.#src)\n      this.#src = src\n      this.#load()\n    }\n  }\n\n  get src() { return this.#src }\n\n  override remove() {\n    textureLoader.release(this.#src)\n    super.remove()\n  }\n}\n"]}