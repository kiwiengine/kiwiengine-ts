{"version":3,"file":"particle.js","sourceRoot":"","sources":["../../../src/node/ext/particle.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAqB,MAAM,qBAAqB,CAAA;AAgCnE,SAAS,MAAM,CAAC,GAAW,EAAE,GAAW;IACtC,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAA;AAC1C,CAAC;AAED,MAAM,OAAO,cAAe,SAAQ,UAAU;IAC5C,UAAU,GAAe,EAAE,CAAA;IAE3B,YAAY,OAA8B;QACxC,KAAK,CAAC,OAAO,CAAC,CAAA;IAChB,CAAC;CACF","sourcesContent":["import { BLEND_MODES } from 'pixi.js'\nimport { GameObject, GameObjectOptions } from '../core/game-object'\n\ntype RandomRange = { min: number, max: number }\n\nexport type ParticleSystemOptions = {\n  texture: string\n\n  count: RandomRange\n  lifespan: RandomRange\n  angle: RandomRange\n  velocity: RandomRange\n  scale: RandomRange\n\n  startAlpha?: number\n  fadeRate: number\n  orientToVelocity: boolean\n\n  blendMode?: BLEND_MODES // ex) 'screen', 'multiply'\n} & GameObjectOptions\n\ninterface Particle {\n  el: HTMLDivElement\n\n  age: number\n  lifespan: number\n\n  velocityX: number\n  velocityY: number\n\n  fadeRate: number\n}\n\nfunction random(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nexport class ParticleSystem extends GameObject {\n  #particles: Particle[] = []\n\n  constructor(options: ParticleSystemOptions) {\n    super(options)\n  }\n}\n"]}