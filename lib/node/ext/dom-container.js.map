{"version":3,"file":"dom-container.js","sourceRoot":"","sources":["../../../src/node/ext/dom-container.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAqB,MAAM,qBAAqB,CAAA;AAInE,MAAM,OAAO,gBAAiB,SAAQ,UAAU;IAC9C,GAAG,CAAa;IAEhB,YAAY,EAAe,EAAE,OAAiC;QAC5D,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,EAAE,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAA;QAC9B,EAAE,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAA;QACnB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAA;QAClB,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAA;QACrB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAA;IACf,CAAC;IAED,cAAc;QACZ,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;QAC9B,IAAI,QAAQ,EAAE,CAAC;YACb,MAAM,EAAE,GAAG,IAAI,CAAC,cAAc,CAAA;YAC9B,MAAM,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAA;YAEhC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,GAAG;;wBAET,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,OAAO,GAAG,CAAC;wBACvD,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC,OAAO,GAAG,CAAC;;gBAE9D,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC;iBAClC,EAAE,CAAC,QAAQ,CAAC,CAAC;OACvB,CAAA;QACH,CAAC;IACH,CAAC;IAED,IAAuB,QAAQ,CAAC,QAA8B;QAC5D,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAA;QAEzB,IAAI,QAAQ,EAAE,CAAC;YACb,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;YACxC,IAAI,CAAC,cAAc,EAAE,CAAA;QACvB,CAAC;IACH,CAAC;IAED,IAAuB,QAAQ;QAC7B,OAAO,KAAK,CAAC,QAAQ,CAAA;IACvB,CAAC;IAES,MAAM,CAAC,EAAU;QACzB,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;QAEhB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;QAC9B,IAAI,QAAQ,IAAI,CAAC,QAAQ,CAAC,YAAY,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC;YACrE,IAAI,CAAC,cAAc,EAAE,CAAA;QACvB,CAAC;QACD,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK;YAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;IAClF,CAAC;CACF","sourcesContent":["import { Renderer } from '../../renderer/renderer'\nimport { GameObject, GameObjectOptions } from '../core/game-object'\n\nexport type DomContainerNodeOptions = {} & GameObjectOptions\n\nexport class DomContainerNode extends GameObject {\n  #el: HTMLElement\n\n  constructor(el: HTMLElement, options?: DomContainerNodeOptions) {\n    super(options)\n    el.style.position = 'absolute'\n    el.style.left = '0'\n    el.style.top = '0'\n    el.style.zIndex = '1'\n    this.#el = el\n  }\n\n  #syncTransform() {\n    const renderer = this.renderer\n    if (renderer) {\n      const gt = this.worldTransform\n      const S = renderer.viewportScale\n\n      this.#el.style.transform = `\n        translate(\n          calc(-50% + ${gt.x.v * S + renderer.canvasLeft + renderer.centerX * S}px),\n          calc(-50% + ${gt.y.v * S + renderer.canvasTop + renderer.centerY * S}px)\n        )\n        scale(${gt.scaleX.v * S}, ${gt.scaleY.v * S})\n        rotate(${gt.rotation.v}rad)\n      `\n    }\n  }\n\n  protected override set renderer(renderer: Renderer | undefined) {\n    super.renderer = renderer\n\n    if (renderer) {\n      renderer.container.appendChild(this.#el)\n      this.#syncTransform()\n    }\n  }\n\n  protected override get renderer() {\n    return super.renderer\n  }\n\n  protected update(dt: number): void {\n    super.update(dt)\n\n    const renderer = this.renderer\n    if (renderer && (renderer._isSizeDirty || this.worldTransform.dirty)) {\n      this.#syncTransform()\n    }\n    if (this.worldAlpha.dirty) this.#el.style.opacity = this.worldAlpha.v.toString()\n  }\n}\n"]}