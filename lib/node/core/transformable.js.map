{"version":3,"file":"transformable.js","sourceRoot":"","sources":["../../../src/node/core/transformable.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,gBAAgB,EAAE,cAAc,EAAE,MAAM,cAAc,CAAA;AAC/D,OAAO,EAAE,cAAc,EAAE,MAAM,aAAa,CAAA;AAiB5C,MAAM,OAAgB,iBAA+D,SAAQ,cAAoB;IACrG,cAAc,GAAG,IAAI,cAAc,EAAE,CAAA;IAE/C,KAAK,GAAG,CAAC,CAAA;IACT,MAAM,CAAS;IACf,SAAS,GAAG,KAAK,CAAA;IAEjB,YAAY,aAAgB,EAAE,OAAiC;QAC7D,KAAK,CAAC,aAAa,CAAC,CAAA;QAEpB,IAAI,OAAO,CAAC,CAAC,KAAK,SAAS;YAAE,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAA;QAC/C,IAAI,OAAO,CAAC,CAAC,KAAK,SAAS;YAAE,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAA;QAC/C,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS;YAAE,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAA;QAC3D,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS;YAAE,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAA;QAC9D,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS;YAAE,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAA;QAC9D,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS;YAAE,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAA;QAC9D,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS;YAAE,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAA;QAC9D,IAAI,OAAO,CAAC,QAAQ,KAAK,SAAS;YAAE,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAA;QACpE,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS;YAAE,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAA;QAE3D,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAA;QAC3B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,IAAI,KAAK,CAAA;IAC5C,CAAC;IAEQ,qBAAqB;QAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;QAC1B,IAAI,MAAM,IAAI,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC;YACvC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,CAAA;YACtE,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAA;QACtD,CAAC;QAED,MAAM,EAAE,GAAG,IAAI,CAAC,cAAc,CAAA;QAC9B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;QAE9B,2BAA2B;QAC3B,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAE,CAAC;YAC5B,MAAM,EAAE,GAAG,IAAI,CAAC,cAAc,CAAA;YAC9B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YAC/B,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;YACtC,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAA;YAC3B,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA;QAC9B,CAAC;aAAM,CAAC;YACN,MAAM,EAAE,GAAG,IAAI,CAAC,cAAc,CAAA;YAC9B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;YAC3B,IAAI,IAAI,CAAC,SAAS;gBAAE,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAA;YACpC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,CAAA;YAClC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,CAAA;YAClC,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAA;YACzB,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;QACvB,CAAC;QAED,KAAK,CAAC,qBAAqB,EAAE,CAAA;IAC/B,CAAC;IAED,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,CAAA,CAAC,CAAC;IACtC,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAA,CAAC,CAAC;IAExC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,CAAA,CAAC,CAAC;IACtC,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAA,CAAC,CAAC;IAExC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAA,CAAC,CAAC;IAC/E,IAAI,KAAK,KAAK,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAA,CAAC,CAAC;IAEjD,IAAI,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAA,CAAC,CAAC;IAChD,IAAI,MAAM,KAAK,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAA,CAAC,CAAC;IAElD,IAAI,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAA,CAAC,CAAC;IAChD,IAAI,MAAM,KAAK,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAA,CAAC,CAAC;IAElD,IAAI,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAA,CAAC,CAAC;IAChD,IAAI,MAAM,KAAK,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAA,CAAC,CAAC;IAElD,IAAI,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAA,CAAC,CAAC;IAChD,IAAI,MAAM,KAAK,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAA,CAAC,CAAC;IAElD,IAAI,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,CAAC,CAAA,CAAC,CAAC;IACpD,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAA,CAAC,CAAC;CACvD","sourcesContent":["import { EventMap } from '@webtaku/event-emitter'\nimport { Container as PixiContainer } from 'pixi.js'\nimport { isRenderableNode, RenderableNode } from './renderable'\nimport { LocalTransform } from './transform'\n\nexport type TransformableNodeOptions = {\n  x?: number\n  y?: number\n  scale?: number\n  scaleX?: number\n  scaleY?: number\n  pivotX?: number\n  pivotY?: number\n  rotation?: number\n\n  alpha?: number\n  layer?: string\n  useYSort?: boolean\n}\n\nexport abstract class TransformableNode<C extends PixiContainer, E extends EventMap> extends RenderableNode<C, E> {\n  protected localTransform = new LocalTransform()\n\n  alpha = 1\n  #layer?: string\n  #useYSort = false\n\n  constructor(pixiContainer: C, options: TransformableNodeOptions) {\n    super(pixiContainer)\n\n    if (options.x !== undefined) this.x = options.x\n    if (options.y !== undefined) this.y = options.y\n    if (options.scale !== undefined) this.scale = options.scale\n    if (options.scaleX !== undefined) this.scaleX = options.scaleX\n    if (options.scaleY !== undefined) this.scaleY = options.scaleY\n    if (options.pivotX !== undefined) this.pivotX = options.pivotX\n    if (options.pivotY !== undefined) this.pivotY = options.pivotY\n    if (options.rotation !== undefined) this.rotation = options.rotation\n    if (options.alpha !== undefined) this.alpha = options.alpha\n\n    this.#layer = options.layer\n    this.#useYSort = options.useYSort ?? false\n  }\n\n  override _updateWorldTransform() {\n    const parent = this.parent\n    if (parent && isRenderableNode(parent)) {\n      this.worldTransform.update(parent.worldTransform, this.localTransform)\n      this.worldAlpha.v = parent.worldAlpha.v * this.alpha\n    }\n\n    const pc = this._pixiContainer\n    const renderer = this.renderer\n\n    // 레이어 상에 있는 경우, 독립적으로 업데이트\n    if (this.#layer && renderer) {\n      const wt = this.worldTransform\n      pc.position.set(wt.x.v, wt.y.v)\n      pc.scale.set(wt.scaleX.v, wt.scaleY.v)\n      pc.rotation = wt.rotation.v\n      pc.alpha = this.worldAlpha.v\n    } else {\n      const lt = this.localTransform\n      pc.position.set(lt.x, lt.y)\n      if (this.#useYSort) pc.zIndex = lt.y\n      pc.pivot.set(lt.pivotX, lt.pivotY)\n      pc.scale.set(lt.scaleX, lt.scaleY)\n      pc.rotation = lt.rotation\n      pc.alpha = this.alpha\n    }\n\n    super._updateWorldTransform()\n  }\n\n  set x(v) { this.localTransform.x = v }\n  get x() { return this.localTransform.x }\n\n  set y(v) { this.localTransform.y = v }\n  get y() { return this.localTransform.y }\n\n  set scale(v) { this.localTransform.scaleX = v; this.localTransform.scaleY = v }\n  get scale() { return this.localTransform.scaleX }\n\n  set scaleX(v) { this.localTransform.scaleX = v }\n  get scaleX() { return this.localTransform.scaleX }\n\n  set scaleY(v) { this.localTransform.scaleY = v }\n  get scaleY() { return this.localTransform.scaleY }\n\n  set pivotX(v) { this.localTransform.pivotX = v }\n  get pivotX() { return this.localTransform.pivotX }\n\n  set pivotY(v) { this.localTransform.pivotY = v }\n  get pivotY() { return this.localTransform.pivotY }\n\n  set rotation(v) { this.localTransform.rotation = v }\n  get rotation() { return this.localTransform.rotation }\n}\n"]}