{"version":3,"file":"transform.js","sourceRoot":"","sources":["../../../src/node/core/transform.ts"],"names":[],"mappings":"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","sourcesContent":["import { DirtyNumber, DirtyRadian } from './dirty-number'\n\nexport class LocalTransform {\n  x = Number.NEGATIVE_INFINITY\n  y = Number.NEGATIVE_INFINITY\n  pivotX = 0\n  pivotY = 0\n  scaleX = 1\n  scaleY = 1\n\n  #rotation = 0\n  #cos = 1\n  #sin = 0\n\n  get cos() { return this.#cos }\n  get sin() { return this.#sin }\n  get rotation() { return this.#rotation }\n\n  set rotation(value: number) {\n    if (this.#rotation !== value) {\n      this.#rotation = value\n      this.#cos = Math.cos(value)\n      this.#sin = Math.sin(value)\n    }\n  }\n}\n\nexport class GlobalTransform {\n  x = new DirtyNumber(Number.NEGATIVE_INFINITY)\n  y = new DirtyNumber(Number.NEGATIVE_INFINITY)\n  scaleX = new DirtyNumber(1)\n  scaleY = new DirtyNumber(1)\n  rotation = new DirtyRadian(0)\n\n  update(parent: GlobalTransform, local: LocalTransform) {\n    const rx = local.x * parent.scaleX.v\n    const ry = local.y * parent.scaleY.v\n    const pCos = parent.rotation.cos\n    const pSin = parent.rotation.sin\n\n    this.scaleX.v = parent.scaleX.v * local.scaleX\n    this.scaleY.v = parent.scaleY.v * local.scaleY\n\n    const pivotX = local.pivotX * this.scaleX.v\n    const pivotY = local.pivotY * this.scaleY.v\n    const cos = local.cos\n    const sin = local.sin\n\n    this.x.v = parent.x.v + (rx * pCos - ry * pSin) - (pivotX * cos - pivotY * sin)\n    this.y.v = parent.y.v + (rx * pSin + ry * pCos) - (pivotX * sin + pivotY * cos)\n\n    this.rotation.v = parent.rotation.v + local.rotation\n  }\n\n  get dirty() {\n    return this.x.dirty ||\n      this.y.dirty ||\n      this.scaleX.dirty ||\n      this.scaleY.dirty ||\n      this.rotation.dirty\n  }\n\n  resetDirty() {\n    this.x.resetDirty()\n    this.y.resetDirty()\n    this.scaleX.resetDirty()\n    this.scaleY.resetDirty()\n    this.rotation.resetDirty()\n  }\n}\n"]}