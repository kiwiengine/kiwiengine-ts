{"version":3,"file":"display-node.js","sourceRoot":"","sources":["../../../src/node/core/display-node.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAA;AAG5C,OAAO,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAA;AAC1D,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAA;AAOxD,MAAM,OAAgB,WAAgC,SAAQ,iBAAoB;IAChF,cAAc,CAAW;IACzB,MAAM,CAAS;IACf,SAAS,GAAG,KAAK,CAAA;IAEjB,KAAK,GAAG,CAAC,CAAC;IACA,WAAW,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,CAAA;IAE1C,YAAY,aAAwB,EAAE,OAA2B;QAC/D,KAAK,EAAE,CAAA;QACP,IAAI,CAAC,cAAc,GAAG,aAAa,CAAA;QACnC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAA;QAC3B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,IAAI,KAAK,CAAA;IAC5C,CAAC;IAED,IAAuB,QAAQ,CAAC,QAA8B;QAC5D,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACzB,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ;YAAE,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;IACtE,CAAC;IAED,IAAuB,QAAQ;QAC7B,OAAO,KAAK,CAAC,QAAQ,CAAA;IACvB,CAAC;IAEQ,GAAG,CAAC,GAAG,QAAoB;QAClC,KAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAA;QAEtB,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE,CAAC;YAC7B,IAAI,kBAAkB,CAAC,KAAK,CAAC,EAAE,CAAC;gBAC9B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,CAAA;YACpD,CAAC;QACH,CAAC;IACH,CAAC;IAEQ,MAAM;QACb,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAA;QAC/C,KAAK,CAAC,MAAM,EAAE,CAAA;IAChB,CAAC;IAES,MAAM,CAAC,EAAU;QACzB,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;QAEhB,MAAM,EAAE,GAAG,IAAI,CAAC,cAAc,CAAA;QAC9B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;QAE9B,2BAA2B;QAC3B,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAE,CAAC;YAC5B,MAAM;QACR,CAAC;aAAM,CAAC;YACN,MAAM,EAAE,GAAG,IAAI,CAAC,cAAc,CAAA;YAC9B,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;YACX,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;YACX,IAAI,IAAI,CAAC,SAAS;gBAAE,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAA;YACpC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAA;YACtB,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAA;YACtB,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAA;YACtB,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAA;YACtB,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAA;YACzB,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;QACvB,CAAC;IACH,CAAC;CACF","sourcesContent":["import { EventMap } from '@webtaku/event-emitter'\nimport { Container } from 'pixi.js'\nimport { Renderer } from '../../renderer/renderer'\nimport { DirtyNumber } from './dirty-number'\nimport { GameNode } from './game-node'\nimport { HasPixiContainer } from './has-pixi-container'\nimport { isHasPixiContainer } from './pixi-container-node'\nimport { TransformableNode } from './transformable-node'\n\nexport type DisplayNodeOptions = {\n  layer?: string\n  useYSort?: boolean\n}\n\nexport abstract class DisplayNode<E extends EventMap> extends TransformableNode<E> implements HasPixiContainer {\n  _pixiContainer: Container\n  #layer?: string\n  #useYSort = false\n\n  alpha = 1;\n  protected globalAlpha = new DirtyNumber(1)\n\n  constructor(pixiContainer: Container, options: DisplayNodeOptions) {\n    super()\n    this._pixiContainer = pixiContainer\n    this.#layer = options.layer\n    this.#useYSort = options.useYSort ?? false\n  }\n\n  protected override set renderer(renderer: Renderer | undefined) {\n    super.renderer = renderer\n    if (this.#layer && renderer) renderer._addToLayer(this, this.#layer)\n  }\n\n  protected override get renderer() {\n    return super.renderer\n  }\n\n  override add(...children: GameNode[]) {\n    super.add(...children)\n\n    for (const child of children) {\n      if (isHasPixiContainer(child)) {\n        this._pixiContainer.addChild(child._pixiContainer)\n      }\n    }\n  }\n\n  override remove() {\n    this._pixiContainer.destroy({ children: true })\n    super.remove()\n  }\n\n  protected update(dt: number): void {\n    super.update(dt)\n\n    const pc = this._pixiContainer\n    const renderer = this.renderer\n\n    // 레이어 상에 있는 경우, 독립적으로 업데이트\n    if (this.#layer && renderer) {\n      //TODO\n    } else {\n      const lt = this.localTransform\n      pc.x = lt.x\n      pc.y = lt.y\n      if (this.#useYSort) pc.zIndex = lt.y\n      pc.pivot.x = lt.pivotX\n      pc.pivot.y = lt.pivotY\n      pc.scale.x = lt.scaleX\n      pc.scale.y = lt.scaleY\n      pc.rotation = lt.rotation\n      pc.alpha = this.alpha\n    }\n  }\n}\n"]}