{"version":3,"file":"display-node.js","sourceRoot":"","sources":["../../../src/node/core/display-node.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAA;AAMxD,MAAM,OAAgB,WAAgC,SAAQ,iBAAoB;IAChF,aAAa,CAAW;IAExB,YAAY,aAAwB,EAAE,OAA2B;QAC/D,KAAK,EAAE,CAAA;QACP,IAAI,CAAC,aAAa,GAAG,aAAa,CAAA;IACpC,CAAC;IAEQ,GAAG,CAAC,GAAG,QAAmD;QACjE,KAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAA;QAEtB,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE,CAAC;YAC7B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;QAClD,CAAC;IACH,CAAC;IAEQ,MAAM;QACb,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAA;QAC9C,KAAK,CAAC,MAAM,EAAE,CAAA;IAChB,CAAC;CACF","sourcesContent":["import { EventMap } from '@webtaku/event-emitter'\nimport { Container } from 'pixi.js'\nimport { GameNode } from './game-node'\nimport { HasPixiContainer } from './has-pixi-container'\nimport { TransformableNode } from './transformable-node'\n\nexport type DisplayNodeOptions = {\n  layer?: string\n}\n\nexport abstract class DisplayNode<E extends EventMap> extends TransformableNode<E> implements HasPixiContainer {\n  pixiContainer: Container\n\n  constructor(pixiContainer: Container, options: DisplayNodeOptions) {\n    super()\n    this.pixiContainer = pixiContainer\n  }\n\n  override add(...children: (GameNode<EventMap> & HasPixiContainer)[]): void {\n    super.add(...children)\n\n    for (const child of children) {\n      this.pixiContainer.addChild(child.pixiContainer)\n    }\n  }\n\n  override remove() {\n    this.pixiContainer.destroy({ children: true })\n    super.remove()\n  }\n}\n"]}