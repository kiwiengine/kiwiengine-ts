{"version":3,"file":"display-node.js","sourceRoot":"","sources":["../../../src/node/core/display-node.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventMap } from '@webtaku/event-emitter'\nimport { Container } from 'pixi.js'\nimport { Renderer } from '../../renderer/renderer'\nimport { DirtyNumber } from './dirty-number'\nimport { GameNode } from './game-node'\nimport { HasPixiContainer } from './has-pixi-container'\nimport { isRenderableNode } from './renderable-node'\nimport { TransformableNode, TransformableNodeOptions } from './transformable-node'\n\nfunction hasWorldAlpha(v: unknown): v is { worldAlpha: DirtyNumber } {\n  return (v as { worldAlpha: DirtyNumber }).worldAlpha !== undefined\n}\n\nexport type DisplayNodeOptions = {\n  alpha?: number\n  layer?: string\n  useYSort?: boolean\n} & TransformableNodeOptions\n\nexport abstract class DisplayNode<C extends Container, E extends EventMap> extends TransformableNode<E> implements HasPixiContainer {\n  _pixiContainer: C\n\n  #renderer?: Renderer\n  #layer?: string\n  #useYSort = false\n\n  alpha = 1;\n  protected worldAlpha = new DirtyNumber(1)\n\n  constructor(pixiContainer: C, options: DisplayNodeOptions) {\n    super(options)\n    this._pixiContainer = pixiContainer\n    this.#layer = options.layer\n    this.#useYSort = options.useYSort ?? false\n    if (options.alpha !== undefined) this.alpha = options.alpha\n  }\n\n  override add(...children: GameNode<EventMap>[]) {\n    super.add(...children)\n\n    for (const child of children) {\n      if (isRenderableNode(child)) {\n        this._pixiContainer.addChild(child._pixiContainer)\n      }\n    }\n  }\n\n  override remove() {\n    this._pixiContainer.destroy({ children: true })\n    super.remove()\n  }\n\n  protected set renderer(renderer: Renderer | undefined) {\n    this.#renderer = renderer\n\n    for (const child of this.children) {\n      if (isRenderableNode(child)) {\n        child.renderer = renderer\n      }\n    }\n\n    if (this.#layer && renderer) {\n      renderer._addToLayer(this, this.#layer)\n    }\n  }\n\n  protected get renderer() {\n    return this.#renderer\n  }\n\n  protected override update(dt: number): void {\n    super.update(dt)\n\n    const parent = this.parent\n    if (parent && hasWorldAlpha(parent)) {\n      this.worldAlpha.v = parent.worldAlpha.v * this.alpha\n    }\n\n    const pc = this._pixiContainer\n    const renderer = this.renderer\n\n    // 레이어 상에 있는 경우, 독립적으로 업데이트\n    if (this.#layer && renderer) {\n      const wt = this.worldTransform\n      pc.position.set(wt.x.v, wt.y.v)\n      pc.scale.set(wt.scaleX.v, wt.scaleY.v)\n      pc.rotation = wt.rotation.v\n      pc.alpha = this.worldAlpha.v\n    } else {\n      const lt = this.localTransform\n      pc.position.set(lt.x, lt.y)\n      if (this.#useYSort) pc.zIndex = lt.y\n      pc.pivot.set(lt.pivotX, lt.pivotY)\n      pc.scale.set(lt.scaleX, lt.scaleY)\n      pc.rotation = lt.rotation\n      pc.alpha = this.alpha\n    }\n  }\n\n  override _resetTransformDirty() {\n    super._resetTransformDirty()\n    this.worldAlpha.resetDirty()\n  }\n}\n"]}