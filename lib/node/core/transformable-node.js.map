{"version":3,"file":"transformable-node.js","sourceRoot":"","sources":["../../../src/node/core/transformable-node.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventMap } from '@webtaku/event-emitter'\nimport { GameNode } from './game-node'\nimport { GlobalTransform, LocalTransform } from './transform'\n\nexport function isTransformableNode(v: unknown): v is TransformableNode<EventMap> {\n  return (v as TransformableNode<EventMap>).globalTransform !== undefined\n}\n\nexport type TransformableNodeOptions = {\n  x?: number\n  y?: number\n  scale?: number\n  scaleX?: number\n  scaleY?: number\n  pivotX?: number\n  pivotY?: number\n  rotation?: number\n}\n\nexport abstract class TransformableNode<E extends EventMap> extends GameNode<E> {\n  protected localTransform = new LocalTransform()\n  globalTransform = new GlobalTransform()\n\n  constructor(options: TransformableNodeOptions) {\n    super()\n    if (options) {\n      if (options.x !== undefined) this.x = options.x\n      if (options.y !== undefined) this.y = options.y\n      if (options.scale !== undefined) this.scale = options.scale\n      if (options.scaleX !== undefined) this.scaleX = options.scaleX\n      if (options.scaleY !== undefined) this.scaleY = options.scaleY\n      if (options.pivotX !== undefined) this.pivotX = options.pivotX\n      if (options.pivotY !== undefined) this.pivotY = options.pivotY\n      if (options.rotation !== undefined) this.rotation = options.rotation\n    }\n  }\n\n  protected override update(dt: number) {\n    super.update(dt)\n\n    const parent = this.parent\n    if (parent && isTransformableNode(parent)) {\n      this.globalTransform.update(parent.globalTransform, this.localTransform)\n    }\n  }\n\n  _resetTransformDirty() {\n    this.globalTransform.resetDirty()\n\n    for (const child of this.children) {\n      if (isTransformableNode(child)) child._resetTransformDirty()\n    }\n  }\n\n  set x(v) { this.localTransform.x = v }\n  get x() { return this.localTransform.x }\n\n  set y(v) { this.localTransform.y = v }\n  get y() { return this.localTransform.y }\n\n  set scale(v) { this.localTransform.scaleX = v; this.localTransform.scaleY = v }\n  get scale() { return this.localTransform.scaleX }\n\n  set scaleX(v) { this.localTransform.scaleX = v }\n  get scaleX() { return this.localTransform.scaleX }\n\n  set scaleY(v) { this.localTransform.scaleY = v }\n  get scaleY() { return this.localTransform.scaleY }\n\n  set pivotX(v) { this.localTransform.pivotX = v }\n  get pivotX() { return this.localTransform.pivotX }\n\n  set pivotY(v) { this.localTransform.pivotY = v }\n  get pivotY() { return this.localTransform.pivotY }\n\n  set rotation(v) { this.localTransform.rotation = v }\n  get rotation() { return this.localTransform.rotation }\n}\n"]}