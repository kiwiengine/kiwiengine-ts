{"version":3,"file":"ticker.test.js","sourceRoot":"","sources":["../../src/renderer/ticker.test.ts"],"names":[],"mappings":"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","sourcesContent":["/** @jest-environment jsdom */\n\n/**\n * Test Suite — Ticker (Jest)\n * -------------------------------------------------------\n * Goals\n *  - Avoid floating-point pitfalls around fixed step boundaries\n *  - Validate uncapped, capped via blur (6fps), long frame split,\n *    focus/pageshow transitions, and remove()\n *  - In this implementation: no setFixedFps; debugMode + focus/blur/pageshow control fps cap\n *\n * Principles\n *  - Do not assert exactly at the boundary (e.g., prefer 170ms over ~166ms)\n *  - Validate deltaTime using toBeCloseTo + loose call count checks\n */\n\n/** ----------------------- Time & RAF harness ----------------------- **/\n\n// Local callback type to avoid depending on DOM lib typings.\ntype FrameCb = (time: number) => void\n\n// Simulated monotonic clock (ms)\nlet nowMs = 0\n\n// RAF callback registry: id -> cb\nconst rafCallbacks = new Map<number, FrameCb>()\nlet nextRafId = 1\n\nconst installTimeAndRafMocks = () => {\n  jest.spyOn(performance, 'now').mockImplementation(() => nowMs)\n\n  jest\n    .spyOn(window, 'requestAnimationFrame')\n    .mockImplementation((cb: FrameCb) => {\n      const id = nextRafId++\n      rafCallbacks.set(id, cb)\n      return id as unknown as number\n    })\n\n  jest.spyOn(window, 'cancelAnimationFrame').mockImplementation((id: number) => {\n    rafCallbacks.delete(id)\n  })\n}\n\nconst resetHarness = () => {\n  nowMs = 0\n  rafCallbacks.clear()\n  nextRafId = 1\n}\n\n/**\n * Advance a single frame: move the clock by advanceMs and\n * run only the currently registered RAF callbacks\n * (callbacks registered during this step run on the next step).\n */\nconst step = (advanceMs: number) => {\n  nowMs += advanceMs\n  const cbs = [...rafCallbacks.values()]\n  rafCallbacks.clear()\n  for (const cb of cbs) cb(nowMs)\n}\n\n/** Advance multiple frames (helper) */\nconst advance = (totalMs: number, stepMs = 16) => {\n  const n = Math.floor(totalMs / stepMs)\n  for (let i = 0; i < n; i++) step(stepMs)\n  const remain = totalMs - n * stepMs\n  if (remain > 0) step(remain)\n}\n\n/**\n * Helper to (re)load Ticker with a specific debugMode value.\n * Uses jest.resetModules + jest.doMock to inject the desired export.\n */\nconst loadTickerWithDebug = async (debug: boolean) => {\n  jest.resetModules()\n  jest.doMock('../debug', () => ({ debugMode: debug }), { virtual: true })\n  const mod = await import('./ticker')\n  return (mod as any).Ticker as new (onTick: (dt: number) => void) => { remove(): void }\n}\n\n/** Small helpers to read arguments cleanly */\nconst argOf = (mockFn: jest.Mock, nthZeroBased: number) => mockFn.mock.calls[nthZeroBased][0] as number\nconst lastArg = (mockFn: jest.Mock) => {\n  const i = mockFn.mock.calls.length - 1\n  return mockFn.mock.calls[i][0] as number\n}\n\n/** ----------------------- Lifecycle -------------------------- **/\n\nbeforeEach(() => {\n  resetHarness()\n  jest.restoreAllMocks()\n  installTimeAndRafMocks()\n})\n\nafterEach(() => {\n  jest.restoreAllMocks()\n  resetHarness()\n})\n\n/** ----------------------- Tests ------------------------------ **/\n\ndescribe('uncapped mode (debugMode=false)', () => {\n  it('calls onTick once per frame with raw deltaTime (seconds)', async () => {\n    const Ticker = await loadTickerWithDebug(false)\n    const spy = jest.fn()\n    const ticker = new Ticker(spy) // default: uncapped\n\n    step(10) // 0.010\n    step(20) // 0.020\n    step(30) // 0.030\n\n    expect(spy).toHaveBeenCalledTimes(3)\n\n    // Assert shapes, then values\n    expect(spy).toHaveBeenNthCalledWith(1, expect.any(Number))\n    expect(spy).toHaveBeenNthCalledWith(2, expect.any(Number))\n    expect(spy).toHaveBeenNthCalledWith(3, expect.any(Number))\n\n    expect(argOf(spy, 0)).toBeCloseTo(0.010, 6)\n    expect(argOf(spy, 1)).toBeCloseTo(0.020, 6)\n    expect(argOf(spy, 2)).toBeCloseTo(0.030, 6)\n\n    ticker.remove()\n  })\n\n  it('does not call onTick when deltaTime <= 0', async () => {\n    const Ticker = await loadTickerWithDebug(false)\n    const spy = jest.fn()\n    const ticker = new Ticker(spy)\n\n    step(0)\n    expect(spy).not.toHaveBeenCalled()\n\n    step(5)\n    expect(spy).toHaveBeenCalledTimes(1)\n    expect(spy).toHaveBeenLastCalledWith(expect.any(Number))\n    expect(lastArg(spy)).toBeCloseTo(0.005, 6)\n\n    ticker.remove()\n  })\n})\n\ndescribe('capped mode via blur (debugMode=true -> 6fps)', () => {\n  it('accumulates lag and calls at fixed-step boundaries (avoid exact boundary)', async () => {\n    const Ticker = await loadTickerWithDebug(true)\n    jest.spyOn(document, 'hasFocus').mockReturnValue(true)\n\n    const spy = jest.fn()\n    const ticker = new Ticker(spy)\n\n    // Apply 6fps cap using blur (fixedStep ≈ 1/6 ≈ 0.1666667s)\n    window.dispatchEvent(new Event('blur'))\n\n    // 100 + 70 = 170ms -> crosses one boundary -> one call ≈ fixedStep\n    step(100)\n    step(70)\n    expect(spy).toHaveBeenCalledTimes(1)\n    expect(spy).toHaveBeenLastCalledWith(expect.any(Number))\n    expect(lastArg(spy)).toBeCloseTo(1 / 6, 6)\n\n    // Remaining lag ≈ 0.0033s\n    step(91) // still below another boundary\n    expect(spy).toHaveBeenCalledTimes(1)\n    step(80) // crosses again\n    expect(spy).toHaveBeenCalledTimes(2)\n    expect(spy).toHaveBeenLastCalledWith(expect.any(Number))\n    expect(lastArg(spy)).toBeCloseTo(1 / 6, 6)\n\n    ticker.remove()\n  })\n\n  it('long frame (delta >= 2*fixedStep) triggers two calls: fixedStep then raw delta; then lag resets', async () => {\n    const Ticker = await loadTickerWithDebug(true)\n    jest.spyOn(document, 'hasFocus').mockReturnValue(true)\n\n    const spy = jest.fn()\n    const ticker = new Ticker(spy)\n\n    window.dispatchEvent(new Event('blur')) // enable 6fps cap\n\n    // 500ms (0.5s) >= 2 * (1/6 ≈ 0.3333s)\n    step(500)\n    expect(spy).toHaveBeenCalledTimes(2)\n\n    expect(spy).toHaveBeenNthCalledWith(1, expect.any(Number))\n    expect(argOf(spy, 0)).toBeCloseTo(1 / 6, 6)\n\n    expect(spy).toHaveBeenNthCalledWith(2, expect.any(Number))\n    expect(argOf(spy, 1)).toBeCloseTo(0.5, 6)\n\n    // Repeat pattern\n    step(500)\n    expect(spy).toHaveBeenCalledTimes(4)\n\n    expect(spy).toHaveBeenNthCalledWith(3, expect.any(Number))\n    expect(argOf(spy, 2)).toBeCloseTo(1 / 6, 6)\n\n    expect(spy).toHaveBeenNthCalledWith(4, expect.any(Number))\n    expect(argOf(spy, 3)).toBeCloseTo(0.5, 6)\n\n    ticker.remove()\n  })\n})\n\ndescribe('runtime transitions via focus/pageshow (debugMode=true)', () => {\n  it('blur -> capped(6fps) / focus -> uncapped: after focus, raw delta behavior resumes', async () => {\n    const Ticker = await loadTickerWithDebug(true)\n    jest.spyOn(document, 'hasFocus').mockReturnValue(true)\n\n    const spy = jest.fn()\n    const ticker = new Ticker(spy)\n\n    // Enter capped mode and get one fixed-step call\n    window.dispatchEvent(new Event('blur'))\n    step(170)\n    expect(spy).toHaveBeenCalledTimes(1)\n    expect(spy).toHaveBeenLastCalledWith(expect.any(Number))\n    expect(lastArg(spy)).toBeCloseTo(1 / 6, 6)\n\n    // Back to uncapped\n    window.dispatchEvent(new Event('focus'))\n\n    spy.mockClear()\n    step(16)\n    step(33)\n    expect(spy).toHaveBeenCalledTimes(2)\n\n    expect(spy).toHaveBeenNthCalledWith(1, expect.any(Number))\n    expect(argOf(spy, 0)).toBeCloseTo(0.016, 6)\n\n    expect(spy).toHaveBeenNthCalledWith(2, expect.any(Number))\n    expect(argOf(spy, 1)).toBeCloseTo(0.033, 6)\n\n    ticker.remove()\n  })\n\n  it('pageshow(persisted=true) sets fpsCap to uncapped again', async () => {\n    const Ticker = await loadTickerWithDebug(true)\n    jest.spyOn(document, 'hasFocus').mockReturnValue(true)\n\n    const spy = jest.fn()\n    const ticker = new Ticker(spy)\n\n    window.dispatchEvent(new Event('blur'))\n    step(200) // > 1/6s => fixed-step call\n    expect(spy).toHaveBeenCalledTimes(1)\n    expect(spy).toHaveBeenLastCalledWith(expect.any(Number))\n    expect(lastArg(spy)).toBeCloseTo(1 / 6, 6)\n\n    // Create a pageshow event with persisted=true (jsdom lacks PageTransitionEvent)\n    const evt = new Event('pageshow') as Event & { persisted?: boolean }\n    Object.defineProperty(evt, 'persisted', { value: true })\n    window.dispatchEvent(evt)\n\n    spy.mockClear()\n    step(25)\n    step(40)\n    expect(spy).toHaveBeenCalledTimes(2)\n\n    expect(spy).toHaveBeenNthCalledWith(1, expect.any(Number))\n    expect(argOf(spy, 0)).toBeCloseTo(0.025, 6)\n\n    expect(spy).toHaveBeenNthCalledWith(2, expect.any(Number))\n    expect(argOf(spy, 1)).toBeCloseTo(0.040, 6)\n\n    ticker.remove()\n  })\n})\n\ndescribe('remove()', () => {\n  it('cancels next RAF and stops future ticks; also cleans up listeners', async () => {\n    const Ticker = await loadTickerWithDebug(true)\n\n    // Ensure the ticker starts in uncapped mode so the first small step triggers a tick.\n    jest.spyOn(document, 'hasFocus').mockReturnValue(true)\n\n    const spy = jest.fn()\n    const cancelSpy = jest.spyOn(window, 'cancelAnimationFrame')\n\n    const ticker = new Ticker(spy)\n\n    step(16) // ~0.016s -> should tick in uncapped mode\n    expect(spy).toHaveBeenCalledTimes(1)\n\n    ticker.remove()\n    expect(cancelSpy).toHaveBeenCalled()\n\n    spy.mockClear()\n    advance(200, 16)\n    expect(spy).not.toHaveBeenCalled()\n\n    // Listeners are cleaned up (dispatching events does nothing and does not throw)\n    expect(() => window.dispatchEvent(new Event('blur'))).not.toThrow()\n    expect(() => window.dispatchEvent(new Event('focus'))).not.toThrow()\n  })\n})\n\ndescribe('long-running sanity (ragged frames, capped=6fps)', () => {\n  it('produces a reasonable number of calls; includes fixedStep calls', async () => {\n    const Ticker = await loadTickerWithDebug(true)\n    jest.spyOn(document, 'hasFocus').mockReturnValue(true)\n\n    const spy = jest.fn()\n    const ticker = new Ticker(spy)\n\n    window.dispatchEvent(new Event('blur')) // 6fps -> fixedStep ≈ 0.1667\n\n    // Total ~1000ms with some long frames to trigger the split branch\n    const frames = [33, 33, 35, 201, 51, 61, 41, 201, 201, 251]\n    for (const ms of frames) step(ms)\n\n    const calls = spy.mock.calls.length\n    // With lag resets/rounding, tolerate a loose range\n    expect(calls).toBeGreaterThanOrEqual(5)\n    expect(calls).toBeLessThanOrEqual(9)\n\n    // At least one call should be exactly the fixed step (~1/6)\n    const hasFixedStep = spy.mock.calls.some(([dt]) => Math.abs((dt as number) - 1 / 6) < 1e-6)\n    expect(hasFixedStep).toBe(true)\n\n    ticker.remove()\n  })\n})\n"]}