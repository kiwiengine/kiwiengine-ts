{"version":3,"file":"renderer.js","sourceRoot":"","sources":["../../src/renderer/renderer.ts"],"names":[],"mappings":"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","sourcesContent":["import { autoDetectRenderer, ColorSource, Renderer as PixiRenderer } from 'pixi.js'\nimport { HasPixiContainer } from '../node/core/has-pixi-container'\nimport { PixiContainerNode } from '../node/core/pixi-container-node'\nimport { RendererContainerManager } from './container-manager'\nimport { Layer } from './layer'\n\nexport type RendererOptions = {\n  logicalWidth?: number\n  logicalHeight?: number\n  backgroundColor?: ColorSource\n  layers?: { name: string; drawOrder: number }[]\n}\n\nexport class Renderer extends PixiContainerNode {\n  #containerManager: RendererContainerManager\n\n  #logicalWidth?: number\n  #logicalHeight?: number\n  #backgroundColor?: ColorSource\n\n  #pixiRenderer?: PixiRenderer\n  #layers: { [name: string]: Layer } = {}\n  _isSizeDirty = false\n\n  canvasLeft = 0\n  canvasTop = 0\n  viewportScale = 1\n  centerX = 0\n  centerY = 0\n\n  constructor(public container: HTMLElement, options?: RendererOptions) {\n    super()\n    this.#containerManager = new RendererContainerManager(container)\n\n    if (options) {\n      if (options.logicalWidth !== undefined) this.#logicalWidth = options.logicalWidth\n      if (options.logicalHeight !== undefined) this.#logicalHeight = options.logicalHeight\n      if (options.backgroundColor !== undefined) this.#backgroundColor = options.backgroundColor\n\n      if (options.layers) {\n        for (const layerOption of options.layers) {\n          const layer = new Layer(layerOption.drawOrder)\n          this._pixiContainer.addChild(layer._pixiContainer)\n          this.#layers[layerOption.name] = layer\n        }\n      }\n    }\n\n    this.init()\n  }\n\n  private async init() {\n    const pr = await autoDetectRenderer({\n      width: this.#logicalWidth,\n      height: this.#logicalHeight,\n      backgroundColor: this.#backgroundColor,\n      eventMode: 'none',\n      resolution: window.devicePixelRatio,\n    })\n\n    const canvas = pr.canvas\n    canvas.style.position = 'absolute'\n    canvas.style.touchAction = 'auto'\n    this.container.appendChild(canvas)\n\n    this.#pixiRenderer = pr\n  }\n\n  _addToLayer(node: HasPixiContainer, layerName: string) {\n    const layer = this.#layers[layerName]\n    if (!layer) throw new Error(`Layer ${layerName} does not exist.`)\n    layer._pixiContainer.addChild(node._pixiContainer)\n  }\n\n  override remove() {\n    this.#containerManager.remove()\n    super.remove()\n  }\n}\n"]}