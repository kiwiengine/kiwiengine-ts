{"version":3,"file":"world-debug.js","sourceRoot":"","sources":["../../src/world/world-debug.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,WAAW,CAAC;AAC/B,OAAO,KAAK,MAAM,UAAU,CAAC;AAC7B,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAE3C,MAAM,OAAO,UAAU;IACrB,UAAU,CAAc;IACxB,MAAM,CAAS;IACf,oBAAoB,CAAiB;IAErC,YAAY,SAAsB;QAChC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE5B,IAAI,SAAS,EAAE,CAAC;YACd,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;YAC1B,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;YACtC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACnB,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACjC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC;IACxB,CAAC;IAED,yBAAyB,CAAC,MAAqB,EAAE,KAAa,EAAE,MAAc;QAC5E,IAAI,SAAS,EAAE,CAAC;YACd,MAAM,mBAAmB,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;gBAC/C,OAAO,EAAE,IAAI,CAAC,UAAU;gBACxB,MAAM;gBACN,OAAO,EAAE;oBACP,KAAK;oBACL,MAAM;oBACN,UAAU,EAAE,aAAa;oBACzB,UAAU,EAAE,KAAK;oBACjB,cAAc,EAAE,IAAI;oBACpB,UAAU,EAAE,MAAM,CAAC,gBAAgB;iBACpC;aACF,CAAC,CAAC;YACH,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;YAEhD,MAAM,WAAW,GAAG,mBAAmB,CAAC,MAAM,CAAC;YAC/C,WAAW,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;YACxC,WAAW,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;YAC/B,WAAW,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC;YACvC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YAEvC,IAAI,IAAI,CAAC,SAAS;gBAAE,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/I,CAAC;IACH,CAAC;IAED,SAAS,CAAmB;IAC5B,UAAU,GAAG,CAAC,CAAC;IACf,WAAW,GAAG,CAAC,CAAC;IAChB,YAAY,GAAG,CAAC,CAAC;IACjB,YAAY,GAAG,CAAC,CAAC;IAEjB,0BAA0B,CACxB,IAAqB,EACrB,KAAa,EACb,MAAc,EACd,OAAe,EACf,OAAe;QAEf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAE5B,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,oBAAoB;YAAE,OAAO;QAErD,MAAM,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACpC,MAAM,EAAE,GAAG,MAAM,CAAC,gBAAgB,IAAI,CAAC,CAAC;QAExC,CAAC,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;QAE1B,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC;QAEvD,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;QAEjE,MAAM,QAAQ,GAAG,KAAK,GAAG,KAAK,CAAC;QAC/B,MAAM,QAAQ,GAAG,MAAM,GAAG,KAAK,CAAC;QAEhC,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;QACzC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;QAEzC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,QAAQ,IAAI,CAAC;QACvC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,QAAQ,IAAI,CAAC;QACxC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC;QAClC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC;QAEhC,IAAI,CAAC,4BAA4B,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACtD,CAAC;IAED,4BAA4B,CAAC,OAAe,EAAE,OAAe;QAC3D,IAAI,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC9B,MAAM,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC;YACpC,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YAClC,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YAEnC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC;YACjC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC;YACjC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC;YACjC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC;YAEjC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;QACpC,CAAC;IACH,CAAC;IAED,OAAO,KAAK,CAAC;CACd","sourcesContent":["import Matter from 'matter-js';\nimport Stats from 'stats.js';\nimport { debugMode } from '../utils/debug';\n\nexport class WorldDebug {\n  #container: HTMLElement;\n  #stats?: Stats;\n  #matterDebugRenderer?: Matter.Render;\n\n  constructor(container: HTMLElement) {\n    this.#container = container;\n\n    if (debugMode) {\n      const stats = new Stats();\n      stats.dom.style.position = 'absolute';\n      stats.showPanel(0);\n      container.appendChild(stats.dom);\n      this.#stats = stats;\n    }\n  }\n\n  update() {\n    this.#stats?.update();\n  }\n\n  createMatterDebugRenderer(engine: Matter.Engine, width: number, height: number) {\n    if (debugMode) {\n      const matterDebugRenderer = Matter.Render.create({\n        element: this.#container,\n        engine,\n        options: {\n          width,\n          height,\n          background: 'transparent',\n          wireframes: false,\n          showCollisions: true,\n          pixelRatio: window.devicePixelRatio,\n        },\n      });\n      this.#matterDebugRenderer = matterDebugRenderer;\n\n      const debugCanvas = matterDebugRenderer.canvas;\n      debugCanvas.style.position = 'absolute';\n      debugCanvas.style.zIndex = '1';\n      debugCanvas.style.touchAction = 'auto';\n      Matter.Render.run(matterDebugRenderer);\n\n      if (this.#lastRect) this.setMatterDebugRendererSize(this.#lastRect, this.#lastWidth, this.#lastHeight, this.#lastCameraX, this.#lastCameraY);\n    }\n  }\n\n  #lastRect?: DOMRectReadOnly;\n  #lastWidth = 0;\n  #lastHeight = 0;\n  #lastCameraX = 0;\n  #lastCameraY = 0;\n\n  setMatterDebugRendererSize(\n    rect: DOMRectReadOnly,\n    width: number,\n    height: number,\n    cameraX: number,\n    cameraY: number,\n  ) {\n    this.#lastRect = rect;\n    this.#lastWidth = width;\n    this.#lastHeight = height;\n    this.#lastCameraX = cameraX;\n    this.#lastCameraY = cameraY;\n\n    if (!debugMode || !this.#matterDebugRenderer) return;\n\n    const r = this.#matterDebugRenderer;\n    const pr = window.devicePixelRatio || 1;\n\n    r.options.width = width;\n    r.options.height = height;\n\n    r.canvas.width = Math.max(1, Math.floor(width * pr));\n    r.canvas.height = Math.max(1, Math.floor(height * pr));\n\n    const scale = Math.min(rect.width / width, rect.height / height);\n\n    const displayW = width * scale;\n    const displayH = height * scale;\n\n    const left = (rect.width - displayW) / 2;\n    const top = (rect.height - displayH) / 2;\n\n    r.canvas.style.width = `${displayW}px`;\n    r.canvas.style.height = `${displayH}px`;\n    r.canvas.style.left = `${left}px`;\n    r.canvas.style.top = `${top}px`;\n\n    this.setMatterDebugRendererCamera(cameraX, cameraY);\n  }\n\n  setMatterDebugRendererCamera(cameraX: number, cameraY: number) {\n    if (this.#matterDebugRenderer) {\n      const r = this.#matterDebugRenderer;\n      const halfW = this.#lastWidth / 2;\n      const halfH = this.#lastHeight / 2;\n\n      r.bounds.min.x = cameraX - halfW;\n      r.bounds.min.y = cameraY - halfH;\n      r.bounds.max.x = cameraX + halfW;\n      r.bounds.max.y = cameraY + halfH;\n\n      Matter.Render.lookAt(r, r.bounds);\n    }\n  }\n\n  destroy() { }\n}\n"]}