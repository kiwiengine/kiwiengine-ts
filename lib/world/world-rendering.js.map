{"version":3,"file":"world-rendering.js","sourceRoot":"","sources":["../../src/world/world-rendering.ts"],"names":[],"mappings":"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","sourcesContent":["import { autoDetectRenderer, Container, EventEmitter, Renderer, Sprite } from \"pixi.js\";\nimport { textureLoader } from '../asset/loaders/texture';\n\nexport class WorldRendering extends EventEmitter<{\n  positionChanged: () => void;\n}> {\n  #renderer?: Renderer;\n  #root = new Container();\n  #backgroundAlpha = 1;\n\n  #cameraX = 0;\n  #cameraY = 0;\n\n  centerX = 0;\n  centerY = 0;\n  renderWidth = 0;\n  renderHeight = 0;\n  renderScale = 1;\n  canvasLeft = 0;\n  canvasTop = 0;\n\n  #backgroundColor = 0x304C79;\n  get backgroundColor() { return this.#backgroundColor; }\n  set backgroundColor(v: number) {\n    this.#backgroundColor = v;\n    if (this.#renderer) this.#renderer.background.color = v;\n  }\n\n  get backgroundAlpha() { return this.#backgroundAlpha; }\n  set backgroundAlpha(v: number) {\n    this.#backgroundAlpha = v;\n    if (this.#renderer) this.#renderer.background.alpha = v;\n  }\n\n  async init(container: HTMLElement, width: number | undefined, height: number | undefined) {\n    const renderer = await autoDetectRenderer({\n      width,\n      height,\n      backgroundColor: this.#backgroundColor,\n      backgroundAlpha: this.#backgroundAlpha,\n      eventMode: 'none',\n      resolution: window.devicePixelRatio,\n    });\n    this.#renderer = renderer;\n\n    const canvas = renderer.canvas;\n    canvas.style.position = 'absolute';\n    canvas.style.touchAction = 'auto';\n    canvas.style.borderRadius = container.style.borderRadius;\n    container.appendChild(canvas);\n\n    if (this.#lastRect) this.setRendererSize(this.#lastRect, this.#lastWidth, this.#lastHeight);\n  }\n\n  #applyPosition() {\n    this.#root.x = this.centerX - this.#cameraX;\n    this.#root.y = this.centerY - this.#cameraY;\n\n    if (this.#backgroundSprite) {\n      this.#backgroundSprite.x = this.#cameraX;\n      this.#backgroundSprite.y = this.#cameraY;\n    }\n\n    this.emit('positionChanged');\n  }\n\n  #lastRect?: DOMRect;\n  #lastWidth = 0;\n  #lastHeight = 0;\n\n  setRendererSize(rect: DOMRect, width: number, height: number) {\n    this.#lastRect = rect;\n    this.#lastWidth = width;\n    this.#lastHeight = height;\n\n    this.centerX = width / 2;\n    this.centerY = height / 2;\n    this.#applyPosition();\n\n    this.renderWidth = width;\n    this.renderHeight = height;\n\n    const scale = Math.min(rect.width / width, rect.height / height);\n    this.renderScale = scale;\n\n    const displayW = width * scale;\n    const displayH = height * scale;\n\n    const left = (rect.width - displayW) / 2;\n    const top = (rect.height - displayH) / 2;\n    this.canvasLeft = left;\n    this.canvasTop = top;\n\n    if (!this.#renderer) return;\n    this.#renderer.resize(width, height);\n\n    const canvas = this.#renderer.canvas;\n    canvas.style.width = `${displayW}px`;\n    canvas.style.height = `${displayH}px`;\n    canvas.style.left = `${left}px`;\n    canvas.style.top = `${top}px`;\n  }\n\n  update() {\n    this.#renderer?.render(this.#root);\n  }\n\n  get cameraX() { return this.#cameraX; }\n  set cameraX(value: number) { this.#cameraX = value; this.#applyPosition(); }\n  get cameraY() { return this.#cameraY; }\n  set cameraY(value: number) { this.#cameraY = value; this.#applyPosition(); }\n\n  addPixiChildToRoot(child: Container) {\n    this.#root.addChild(child);\n  }\n\n  destroy() {\n    this.#renderer?.destroy();\n    this.#renderer = undefined;\n  }\n\n  #backgroundSprite?: Sprite;\n  setBackgroundImage(image: string | undefined) {\n    if (image) {\n      if (!textureLoader.checkLoaded(image)) {\n        console.info(`Background image not preloaded. Loading now: ${image}`);\n      }\n      textureLoader.load(image).then((texture) => {\n        if (texture) {\n          this.#backgroundSprite?.destroy();\n          this.#backgroundSprite = new Sprite({\n            x: this.#cameraX,\n            y: this.#cameraY,\n            texture,\n            anchor: { x: 0.5, y: 0.5 },\n            width: this.renderWidth,\n            height: this.renderHeight,\n            zIndex: -999999,\n          });\n          this.#root.addChild(this.#backgroundSprite);\n        }\n      });\n    }\n  }\n}\n"]}