{"version":3,"file":"world-physics.js","sourceRoot":"","sources":["../../src/world/world-physics.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;AACtD,OAAO,MAAM,MAAM,WAAW,CAAC;AAG/B,MAAM,OAAO,YAAa,SAAQ,YAGhC;IACA,OAAO,CAAiB;IACxB,QAAQ,GAAG,CAAC,CAAC;IAEb,IAAI,OAAO,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACvC,IAAI,OAAO,CAAC,CAAS;QACnB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,IAAI,CAAC,OAAO;YAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC;IAED,aAAa;QACX,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEvC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,gBAAgB,EAAE,CAAC,KAAK,EAAE,EAAE;YACzD,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC3B,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;gBAC9B,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACtE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;IAED,OAAO,CAAC,IAAiB;QACvB,IAAI,CAAC,IAAI,CAAC,OAAO;YAAE,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,UAAU,CAAC,IAAiB;QAC1B,IAAI,CAAC,IAAI,CAAC,OAAO;YAAE,OAAO;QAC1B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,MAAM,CAAC,EAAU;QACf,IAAI,CAAC,IAAI,CAAC,OAAO;YAAE,OAAO;QAC1B,MAAM,QAAQ,GAAG,EAAE,GAAG,IAAI,CAAC;QAC3B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IAC5E,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,OAAO;YAAE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACpD,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;IAC3B,CAAC;CACF","sourcesContent":["import { EventEmitter } from '@webtaku/event-emitter';\nimport Matter from 'matter-js';\nimport { GameObject } from '../game-object/game-object';\n\nexport class WorldPhysics extends EventEmitter<{\n  engineCreated: (engine: Matter.Engine) => void;\n  collisionStart: (a: GameObject, b: GameObject) => void;\n}> {\n  #engine?: Matter.Engine;\n  #gravity = 0;\n\n  get gravity() { return this.#gravity; }\n  set gravity(v: number) {\n    this.#gravity = v;\n    if (this.#engine) this.#engine.gravity.y = v;\n  }\n\n  #createEngine() {\n    this.#engine = Matter.Engine.create();\n    this.#engine.gravity.y = this.#gravity;\n\n    Matter.Events.on(this.#engine, 'collisionStart', (event) => {\n      event.pairs.forEach((pair) => {\n        const { bodyA, bodyB } = pair;\n        this.emit('collisionStart', bodyA.plugin.owner, bodyB.plugin.owner);\n      });\n    });\n\n    this.emit('engineCreated', this.#engine);\n  }\n\n  addBody(body: Matter.Body) {\n    if (!this.#engine) this.#createEngine();\n    Matter.World.add(this.#engine!.world, body);\n  }\n\n  removeBody(body: Matter.Body) {\n    if (!this.#engine) return;\n    Matter.World.remove(this.#engine!.world, body);\n  }\n\n  update(dt: number) {\n    if (!this.#engine) return;\n    const matterDt = dt * 1000;\n    Matter.Engine.update(this.#engine, matterDt > 16.666 ? 16.666 : matterDt);\n  }\n\n  destroy() {\n    if (this.#engine) Matter.Engine.clear(this.#engine);\n    this.#engine = undefined;\n  }\n}\n"]}