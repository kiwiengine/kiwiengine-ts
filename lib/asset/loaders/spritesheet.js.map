{"version":3,"file":"spritesheet.js","sourceRoot":"","sources":["../../../src/asset/loaders/spritesheet.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAmB,MAAM,SAAS,CAAC;AACvD,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAClC,OAAO,EAAE,aAAa,EAAE,MAAM,WAAW,CAAC;AAE1C,MAAM,YAAY,GAAG,IAAI,OAAO,EAA+B,CAAC;AAChE,IAAI,SAAS,GAAG,CAAC,CAAC;AAElB,SAAS,WAAW,CAAC,GAAW,EAAE,KAAa;IAC7C,IAAI,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACvC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACd,QAAQ,GAAG,IAAI,GAAG,EAAkB,CAAC;QACrC,YAAY,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACpC,CAAC;IAED,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;QACvB,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,SAAS,EAAE,EAAE,CAAC,CAAC;IAC7C,CAAC;IAED,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;AAC5B,CAAC;AAED,MAAM,iBAAkB,SAAQ,MAAmB;IACjD,QAAQ,GAAwB,IAAI,GAAG,EAAE,CAAC;IAEvB,KAAK,CAAC,KAAK,CAAC,EAAU,EAAE,GAAW,EAAE,KAAsB;QAC5E,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;QAE3B,MAAM,cAAc,GAAG,CAAC,KAAK,IAAI,EAAE;YACjC,MAAM,OAAO,GAAG,MAAM,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC9C,IAAI,CAAC,OAAO,EAAE,CAAC;gBACb,OAAO,CAAC,KAAK,CAAC,2BAA2B,GAAG,EAAE,CAAC,CAAC;gBAChD,OAAO;YACT,CAAC;YAED,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YACpD,MAAM,WAAW,CAAC,KAAK,EAAE,CAAC;YAE1B,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAEhC,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC;gBAC1B,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;oBAC9B,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBAC3B,OAAO,CAAC,KAAK,CAAC,+BAA+B,GAAG,EAAE,CAAC,CAAC;gBACtD,CAAC;qBAAM,CAAC;oBACN,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;oBACvC,OAAO,WAAW,CAAC;gBACrB,CAAC;YACH,CAAC;iBAAM,CAAC;gBACN,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC,CAAC,EAAE,CAAC;QAEL,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;QAC7C,OAAO,MAAM,cAAc,CAAC;IAC9B,CAAC;IAEkB,QAAQ,CAAC,EAAU,EAAE,WAAwB;QAC9D,WAAW,CAAC,OAAO,EAAE,CAAC;QAEtB,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAClC,IAAI,GAAG;YAAE,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;CACF;AAED,MAAM,iBAAiB,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAElD,OAAO,EAAE,WAAW,EAAE,iBAAiB,EAAE,CAAC","sourcesContent":["import { Spritesheet, SpritesheetData } from 'pixi.js';\nimport { Loader } from './loader';\nimport { textureLoader } from './texture';\n\nconst atlasIdCache = new WeakMap<object, Map<string, string>>();\nlet idCounter = 0;\n\nfunction getCachedId(src: string, atlas: object): string {\n  let innerMap = atlasIdCache.get(atlas);\n  if (!innerMap) {\n    innerMap = new Map<string, string>();\n    atlasIdCache.set(atlas, innerMap);\n  }\n\n  if (!innerMap.has(src)) {\n    innerMap.set(src, `${src}#${idCounter++}`);\n  }\n\n  return innerMap.get(src)!;\n}\n\nclass SpritesheetLoader extends Loader<Spritesheet> {\n  #idToSrc: Map<string, string> = new Map();\n\n  protected override async _load(id: string, src: string, atlas: SpritesheetData) {\n    this.#idToSrc.set(id, src);\n\n    const loadingPromise = (async () => {\n      const texture = await textureLoader.load(src);\n      if (!texture) {\n        console.error(`Failed to load texture: ${src}`);\n        return;\n      }\n\n      const spritesheet = new Spritesheet(texture, atlas);\n      await spritesheet.parse();\n\n      this.loadingPromises.delete(id);\n\n      if (this.hasActiveRef(id)) {\n        if (this.loadedAssets.has(id)) {\n          textureLoader.release(src);\n          console.error(`Spritesheet already exists: ${src}`);\n        } else {\n          this.loadedAssets.set(id, spritesheet);\n          return spritesheet;\n        }\n      } else {\n        textureLoader.release(src);\n      }\n    })();\n\n    this.loadingPromises.set(id, loadingPromise);\n    return await loadingPromise;\n  }\n\n  protected override _dispose(id: string, spritesheet: Spritesheet) {\n    spritesheet.destroy();\n\n    const src = this.#idToSrc.get(id);\n    if (src) textureLoader.release(src);\n  }\n}\n\nconst spritesheetLoader = new SpritesheetLoader();\n\nexport { getCachedId, spritesheetLoader };\n"]}