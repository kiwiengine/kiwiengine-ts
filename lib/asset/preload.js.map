{"version":3,"file":"preload.js","sourceRoot":"","sources":["../../src/asset/preload.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAA;AAEjD,MAAM,CAAC,KAAK,UAAU,OAAO,CAAC,MAAgB,EAAE,gBAA6C;IAC3F,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAA;IAC3B,IAAI,MAAM,GAAG,CAAC,CAAA;IAEd,MAAM,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;QAC3C,MAAM,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAE/B,MAAM,EAAE,CAAA;QACR,gBAAgB,EAAE,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA;IACpC,CAAC,CAAC,CAAC,CAAA;IAEH,OAAO,GAAG,EAAE;QACV,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACvB,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;QAC9B,CAAC,CAAC,CAAA;IACJ,CAAC,CAAA;AACH,CAAC","sourcesContent":["import { textureLoader } from './loaders/texture'\n\nexport async function preload(assets: string[], progressCallback?: (progress: number) => void) {\n  const total = assets.length\n  let loaded = 0\n\n  await Promise.all(assets.map(async (asset) => {\n    await textureLoader.load(asset)\n\n    loaded++\n    progressCallback?.(loaded / total)\n  }))\n\n  return () => {\n    assets.forEach((asset) => {\n      textureLoader.release(asset)\n    })\n  }\n}\n"]}