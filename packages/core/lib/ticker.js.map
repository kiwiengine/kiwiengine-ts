{"version":3,"file":"ticker.js","sourceRoot":"","sources":["../src/ticker.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,MAAM;IACjB,SAAS,CAAS;IAClB,QAAQ,GAAG,CAAC,CAAC;IAEb,YAAY,MAAmC,EAAE,QAAiB;QAChE,IAAI,CAAC,SAAS,GAAG,QAAQ,KAAK,SAAS,IAAI,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAA;QAE9E,IAAI,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE,CAAA;QAChC,IAAI,UAAU,GAAG,CAAC,CAAA;QAElB,MAAM,IAAI,GAAG,CAAC,SAAiB,EAAE,EAAE;YACjC,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAA;YAC3C,MAAM,SAAS,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC,GAAG,IAAI,CAAA;YAC/C,IAAI,SAAS,IAAI,CAAC;gBAAE,OAAM;YAC1B,QAAQ,GAAG,SAAS,CAAA;YAEpB,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE,CAAC;gBACjC,MAAM,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAA;gBACpC,UAAU,IAAI,SAAS,CAAA;gBAEvB,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC;oBAC5B,MAAM,CAAC,SAAS,CAAC,CAAA;oBACjB,IAAI,UAAU,IAAI,SAAS,GAAG,CAAC,EAAE,CAAC;wBAChC,MAAM,CAAC,SAAS,CAAC,CAAA;wBACjB,UAAU,GAAG,CAAC,CAAA;oBAChB,CAAC;yBAAM,CAAC;wBACN,UAAU,IAAI,SAAS,CAAA;oBACzB,CAAC;gBACH,CAAC;YACH,CAAC;iBAAM,CAAC;gBACN,MAAM,CAAC,SAAS,CAAC,CAAA;YACnB,CAAC;QACH,CAAC,CAAA;QAED,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAA;IAC7C,CAAC;IAED,WAAW,CAAC,GAAW;QACrB,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAA;IAC5C,CAAC;IAED,eAAe;QACb,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;IAC5B,CAAC;IAED,OAAO;QACL,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;IACrC,CAAC;CACF","sourcesContent":["export class Ticker {\n  #fixedFps?: number\n  #frameId = 0;\n\n  constructor(onTick: (deltaTime: number) => void, fixedFps?: number) {\n    this.#fixedFps = fixedFps !== undefined && fixedFps > 0 ? fixedFps : undefined\n\n    let lastTime = performance.now()\n    let lagSeconds = 0\n\n    const tick = (timestamp: number) => {\n      this.#frameId = requestAnimationFrame(tick)\n      const deltaTime = (timestamp - lastTime) / 1000\n      if (deltaTime <= 0) return\n      lastTime = timestamp\n\n      if (this.#fixedFps !== undefined) {\n        const fixedStep = 1 / this.#fixedFps\n        lagSeconds += deltaTime\n\n        if (lagSeconds >= fixedStep) {\n          onTick(fixedStep)\n          if (lagSeconds >= fixedStep * 2) {\n            onTick(deltaTime)\n            lagSeconds = 0\n          } else {\n            lagSeconds -= fixedStep\n          }\n        }\n      } else {\n        onTick(deltaTime)\n      }\n    }\n\n    this.#frameId = requestAnimationFrame(tick)\n  }\n\n  setFixedFps(fps: number) {\n    this.#fixedFps = fps > 0 ? fps : undefined\n  }\n\n  disableFixedFps() {\n    this.#fixedFps = undefined\n  }\n\n  destroy() {\n    cancelAnimationFrame(this.#frameId)\n  }\n}\n"]}