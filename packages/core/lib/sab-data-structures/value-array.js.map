{"version":3,"file":"value-array.js","sourceRoot":"","sources":["../../src/sab-data-structures/value-array.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,oBAAoB;IACtB,OAAO,CAAc;IACrB,OAAO,CAAQ;IAExB,YACE,GAAsB,EACtB,UAAkB,EAClB,QAAgB,EAChB,UAAkB;QAElB,IAAI,CAAC,OAAO,GAAG,UAAU,CAAA;QACzB,IAAI,CAAC,OAAO,GAAG,IAAI,YAAY,CAAC,GAAG,EAAE,UAAU,EAAE,QAAQ,GAAG,UAAU,CAAC,CAAA;IACzE,CAAC;IAED,MAAM,CAAC,aAAa,CAAC,QAAgB,EAAE,UAAkB;QACvD,OAAO,QAAQ,GAAG,UAAU,GAAG,YAAY,CAAC,iBAAiB,CAAA;IAC/D,CAAC;IAED,IAAI,UAAU,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAA,CAAC,CAAC;IAEnD,OAAO,CAAC,CAAS,IAAI,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAA,CAAC,CAAC;IAE9C,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;QACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;IACvC,CAAC;IAED,GAAG,CAAC,CAAS,EAAE,CAAS;QACtB,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;IAC1C,CAAC;CACF","sourcesContent":["export class SABFloat32ValueArray {\n  readonly #values: Float32Array\n  readonly #stride: number\n\n  constructor(\n    sab: SharedArrayBuffer,\n    byteOffset: number,\n    capacity: number,\n    valueCount: number,\n  ) {\n    this.#stride = valueCount\n    this.#values = new Float32Array(sab, byteOffset, capacity * valueCount)\n  }\n\n  static bytesRequired(capacity: number, valueCount: number): number {\n    return capacity * valueCount * Float32Array.BYTES_PER_ELEMENT\n  }\n\n  get byteLength() { return this.#values.byteLength }\n\n  #offset(i: number) { return i * this.#stride }\n\n  set(i: number, j: number, v: number) {\n    this.#values[this.#offset(i) + j] = v\n  }\n\n  get(i: number, j: number): number {\n    return this.#values[this.#offset(i) + j]\n  }\n}\n"]}