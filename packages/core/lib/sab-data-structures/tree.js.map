{"version":3,"file":"tree.js","sourceRoot":"","sources":["../../src/sab-data-structures/tree.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,SAAS,CAAA;AAExC,MAAM,QAAQ,GAAG,CAAC,CAAA;AAElB,MAAM,OAAO,OAAO;IACT,UAAU,CAAgB;IAC1B,KAAK,CAAc;IACnB,SAAS,CAAQ;IACjB,OAAO,CAAQ;IAExB,YAAY,GAAsB,EAAE,QAAgB,EAAE,CAAC;QACrD,IAAI,CAAC,UAAU,GAAG,IAAI,cAAc,CAAC,GAAG,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAA;QACvD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC;YAClC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;QAC5B,CAAC;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;QACxE,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAA;IAC3B,CAAC;IAED,MAAM,CAAC,aAAa,CAAC,QAAgB;QACnC,OAAO,cAAc,CAAC,aAAa,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,YAAY,CAAC,iBAAiB,CAAA;IAC/F,CAAC;CACF","sourcesContent":["import { SABUint32Queue } from './queue'\n\nconst ROOT_IDX = 0\n\nexport class SABTree {\n  readonly #freeQueue: SABUint32Queue\n  readonly #data: Float32Array\n  readonly #capacity: number\n  readonly #stride: number\n\n  constructor(sab: SharedArrayBuffer, capacity: number, v) {\n    this.#freeQueue = new SABUint32Queue(sab, capacity - 1)\n    for (let i = 1; i < capacity; i++) {\n      this.#freeQueue.enqueue(i)\n    }\n    this.#data = new Float32Array(sab, this.#freeQueue.byteLength, capacity)\n    this.#capacity = capacity\n  }\n\n  static bytesRequired(capacity: number): number {\n    return SABUint32Queue.bytesRequired(capacity - 1) + capacity * Float32Array.BYTES_PER_ELEMENT\n  }\n}\n"]}