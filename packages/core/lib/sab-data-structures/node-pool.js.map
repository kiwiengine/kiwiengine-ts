{"version":3,"file":"node-pool.js","sourceRoot":"","sources":["../../src/sab-data-structures/node-pool.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,SAAS,CAAA;AAExC,MAAM,OAAO,WAAW;IACb,EAAE,CAAgB;IAE3B,YAAY,GAAsB,EAAE,UAAkB,EAAE,QAAgB;QACtE,IAAI,CAAC,EAAE,GAAG,IAAI,cAAc,CAAC,GAAG,EAAE,UAAU,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAA;QAC3D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE;YAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;IACvD,CAAC;IAED,MAAM,CAAC,aAAa,CAAC,QAAgB;QACnC,OAAO,cAAc,CAAC,aAAa,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAA;IACnD,CAAC;IAED,IAAI,UAAU,KAAK,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,CAAA,CAAC,CAAC;IAE9C,KAAK;QACH,OAAO,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAA;IAC1B,CAAC;IAED,IAAI,CAAC,GAAW;QACd,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IACtB,CAAC;CACF","sourcesContent":["import { SABUint32Queue } from './queue'\n\nexport class SABNodePool {\n  readonly #q: SABUint32Queue\n\n  constructor(sab: SharedArrayBuffer, byteOffset: number, capacity: number) {\n    this.#q = new SABUint32Queue(sab, byteOffset, capacity - 1)\n    for (let i = 1; i < capacity; i++) this.#q.enqueue(i)\n  }\n\n  static bytesRequired(capacity: number): number {\n    return SABUint32Queue.bytesRequired(capacity - 1)\n  }\n\n  get byteLength() { return this.#q.byteLength }\n\n  alloc(): number {\n    return this.#q.dequeue()\n  }\n\n  free(idx: number): void {\n    this.#q.enqueue(idx)\n  }\n}\n"]}