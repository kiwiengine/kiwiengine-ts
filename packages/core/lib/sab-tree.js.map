{"version":3,"file":"sab-tree.js","sourceRoot":"","sources":["../src/sab-tree.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,OAAO;IAClB,IAAI,CAAmB;IACvB,aAAa,CAAQ;IAErB,UAAU,CAAa;IACvB,IAAI,CAAc;IAElB,YAAY,GAAsB;QAChC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAA;QACf,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,UAAU,GAAG,CAAC,WAAW,CAAC,iBAAiB,GAAG,YAAY,CAAC,iBAAiB,CAAC,CAAA;QAEtG,IAAI,CAAC,UAAU,GAAG,IAAI,WAAW,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAA;QAC7D,IAAI,CAAC,IAAI,GAAG,IAAI,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAA;IAC3G,CAAC;CACF","sourcesContent":["export class SABTree {\n  #sab: SharedArrayBuffer\n  #maxNodeCount: number\n\n  #freeQueue: Uint32Array\n  #mem: Float32Array\n\n  constructor(sab: SharedArrayBuffer) {\n    this.#sab = sab\n    this.#maxNodeCount = sab.byteLength / (Uint32Array.BYTES_PER_ELEMENT + Float32Array.BYTES_PER_ELEMENT)\n\n    this.#freeQueue = new Uint32Array(sab, 0, this.#maxNodeCount)\n    this.#mem = new Float32Array(sab, this.#maxNodeCount * Uint32Array.BYTES_PER_ELEMENT, this.#maxNodeCount)\n  }\n}\n"]}