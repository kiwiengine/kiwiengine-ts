{"version":3,"file":"createTicker.js","sourceRoot":"","sources":["../src/createTicker.ts"],"names":[],"mappings":"AAUA,MAAM,UAAU,YAAY,CAAC,UAAkC;IAC7D,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,UAAU,CAAA;IAE5C,IAAI,QAAQ,GAAG,GAAG,KAAK,SAAS,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAA;IAC7D,IAAI,OAAO,GAAG,CAAC,CAAA;IACf,IAAI,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE,CAAA;IAChC,IAAI,UAAU,GAAG,CAAC,CAAA;IAElB,MAAM,IAAI,GAAG,CAAC,SAAiB,EAAE,EAAE;QACjC,OAAO,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAA;QACrC,MAAM,SAAS,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC,GAAG,IAAI,CAAA;QAC/C,IAAI,SAAS,IAAI,CAAC;YAAE,OAAM;QAC1B,QAAQ,GAAG,SAAS,CAAA;QAEpB,IAAI,QAAQ,KAAK,SAAS,EAAE,CAAC;YAC3B,MAAM,SAAS,GAAG,CAAC,GAAG,QAAQ,CAAA;YAC9B,UAAU,IAAI,SAAS,CAAA;YAEvB,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC;gBAC5B,MAAM,CAAC,SAAS,CAAC,CAAA;gBACjB,IAAI,UAAU,IAAI,SAAS,GAAG,CAAC,EAAE,CAAC;oBAChC,MAAM,CAAC,SAAS,CAAC,CAAA;oBACjB,UAAU,GAAG,CAAC,CAAA;gBAChB,CAAC;qBAAM,CAAC;oBACN,UAAU,IAAI,SAAS,CAAA;gBACzB,CAAC;YACH,CAAC;QACH,CAAC;aAAM,CAAC;YACN,MAAM,CAAC,SAAS,CAAC,CAAA;QACnB,CAAC;IACH,CAAC,CAAA;IAED,OAAO,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAA;IAErC,OAAO;QACL,WAAW,EAAE,CAAC,GAAuB,EAAE,EAAE;YACvC,QAAQ,GAAG,GAAG,KAAK,SAAS,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAA;QAC3D,CAAC;QACD,OAAO,EAAE,GAAG,EAAE;YACZ,oBAAoB,CAAC,OAAO,CAAC,CAAA;QAC/B,CAAC;KACF,CAAA;AACH,CAAC","sourcesContent":["export type CreateTickerParameters = {\n  fixedFps?: number | undefined\n  onTick: (deltaTime: number) => void\n}\n\nexport type Ticker = {\n  setFixedFps: (fps: number | undefined) => void\n  destroy: () => void\n}\n\nexport function createTicker(parameters: CreateTickerParameters): Ticker {\n  const { fixedFps: fps, onTick } = parameters\n\n  let fixedFps = fps !== undefined && fps > 0 ? fps : undefined\n  let frameId = 0\n  let lastTime = performance.now()\n  let lagSeconds = 0\n\n  const tick = (timestamp: number) => {\n    frameId = requestAnimationFrame(tick)\n    const deltaTime = (timestamp - lastTime) / 1000\n    if (deltaTime <= 0) return\n    lastTime = timestamp\n\n    if (fixedFps !== undefined) {\n      const fixedStep = 1 / fixedFps\n      lagSeconds += deltaTime\n\n      if (lagSeconds >= fixedStep) {\n        onTick(fixedStep)\n        if (lagSeconds >= fixedStep * 2) {\n          onTick(deltaTime)\n          lagSeconds = 0\n        } else {\n          lagSeconds -= fixedStep\n        }\n      }\n    } else {\n      onTick(deltaTime)\n    }\n  }\n\n  frameId = requestAnimationFrame(tick)\n\n  return {\n    setFixedFps: (fps: number | undefined) => {\n      fixedFps = fps !== undefined && fps > 0 ? fps : undefined\n    },\n    destroy: () => {\n      cancelAnimationFrame(frameId)\n    }\n  }\n}\n"]}