{"version":3,"file":"object-state-tree.js","sourceRoot":"","sources":["../../src/object/object-state-tree.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,6BAA6B,CAAA;AAErD,MAAM,YAAY,GAAG,SAAkB,CAAA;AACvC,MAAM,gBAAgB,GAAG,CAAU,CAAA;AACnC,MAAM,gBAAgB,GAAG,CAAU,CAAA;AACnC,MAAM,gBAAgB,GAAG,CAAU,CAAA;AAEnC,WAAW;AAEX,QAAQ;AACR,MAAM,eAAe,GAAG,CAAU,CAAA;AAClC,MAAM,YAAY,GAAG,CAAU,CAAA;AAE/B,SAAS;AACT,MAAM,KAAK,GAAG,CAAU,CAAA;AACxB,MAAM,KAAK,GAAG,CAAU,CAAA;AAExB,MAAM,UAAU,8BAA8B;IAC5C,OAAO,IAAI,iBAAiB,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB,CAAC,CAAC,CAAA;AACzH,CAAC;AAED,MAAM,OAAO,eAAgB,SAAQ,OAAO;IAC1C,YAAY,GAAsB;QAChC,KAAK,CAAC,GAAG,EAAE,YAAY,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB,CAAC,CAAA;IAChF,CAAC;IAED,IAAI,CAAC,CAAS,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA,CAAC,CAAC;IACnD,IAAI,CAAC,CAAS,EAAE,CAAS,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAA,CAAC,CAAC;IAE1D,IAAI,CAAC,CAAS,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA,CAAC,CAAC;IACnD,IAAI,CAAC,CAAS,EAAE,CAAS,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAA,CAAC,CAAC;IAE1D,aAAa,CAAC,CAAS,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,eAAe,CAAC,CAAA,CAAC,CAAC;IACtE,aAAa,CAAC,CAAS,EAAE,CAAS,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,eAAe,EAAE,CAAC,CAAC,CAAA,CAAC,CAAC;IAE7E,UAAU,CAAC,CAAS,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,YAAY,CAAC,CAAA,CAAC,CAAC;IAChE,UAAU,CAAC,CAAS,EAAE,CAAS,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,CAAA,CAAC,CAAC;CACxE","sourcesContent":["import { SABTree } from '../sab-data-structures/tree'\n\nconst OBJ_CAPACITY = 1_000_000 as const\nconst OBJ_BVALUE_COUNT = 0 as const\nconst OBJ_UVALUE_COUNT = 2 as const\nconst OBJ_FVALUE_COUNT = 2 as const\n\n// booleans\n\n// uints\nconst OBJECT_TYPE_IDX = 0 as const\nconst ASSET_ID_IDX = 1 as const\n\n// floats\nconst X_IDX = 0 as const\nconst Y_IDX = 1 as const\n\nexport function createInitialObjectStateBuffer(): SharedArrayBuffer {\n  return new SharedArrayBuffer(SABTree.bytesRequired(OBJ_CAPACITY, OBJ_BVALUE_COUNT, OBJ_UVALUE_COUNT, OBJ_FVALUE_COUNT))\n}\n\nexport class ObjectStateTree extends SABTree {\n  constructor(sab: SharedArrayBuffer) {\n    super(sab, OBJ_CAPACITY, OBJ_BVALUE_COUNT, OBJ_UVALUE_COUNT, OBJ_FVALUE_COUNT)\n  }\n\n  getX(i: number) { return this.getFValue(i, X_IDX) }\n  setX(i: number, v: number) { this.setFValue(i, X_IDX, v) }\n\n  getY(i: number) { return this.getFValue(i, Y_IDX) }\n  setY(i: number, v: number) { this.setFValue(i, Y_IDX, v) }\n\n  getObjectType(i: number) { return this.getUValue(i, OBJECT_TYPE_IDX) }\n  setObjectType(i: number, v: number) { this.setUValue(i, OBJECT_TYPE_IDX, v) }\n\n  getAssetId(i: number) { return this.getUValue(i, ASSET_ID_IDX) }\n  setAssetId(i: number, v: number) { this.setUValue(i, ASSET_ID_IDX, v) }\n}\n"]}